(XLISP::CHECK-FSL-VERSION 1 4)
#K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 2 1 4 23 4 0 2 2 3 49 5 4 0 57 0) #(0 17 23) #(NIL "can't find package ~s" "XLISP" FIND-PACKAGE ERROR *PACKAGE*) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((STEP *STEPPER-DEPTH* *STEPPER-LENGTH*) EXPORT) 0 NIL)
#K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(((:USE "XLISP")) "TOOLS" DO-DEFPACKAGE) 0 NIL)
#K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 2 1 4 23 4 0 2 2 3 49 5 4 0 57 0) #(0 17 23) #(NIL "can't find package ~s" "TOOLS" FIND-PACKAGE ERROR *PACKAGE*) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 3 3 4 5 4 23 6 6 1 5 23 6 7 1 4 23 6 8 1 3 23 6 9 1 1 23 7 8 2 8 9 23 6 8 1 8 23 7 8 1 8 23 6 8 1 8 25 7 0 4 6 7 8 2 80 3 0 2 17 1 3 51 1 4 0 25 8 0 2 4 3) #(0 20 78) #(WHILE COERCE-TO-MACRO XLISP::INSTALL-FUNCTION NOT NIL DO LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*HOOKLEVEL* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(0 *HOOKLEVEL* SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*HOOKLEVEL*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*STEPPER-DEPTH* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 1 2 4 11 0 1 25 4 0 2 3 2) #(0 17 20) #(NIL 3 *STEPPER-DEPTH* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*STEPPER-DEPTH*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*STEPPER-LENGTH* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 1 2 4 11 0 1 25 4 0 2 3 2) #(0 17 20) #(NIL 3 *STEPPER-LENGTH* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*STEPPER-LENGTH*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*FCN* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(*ALL* *FCN* SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*FCN*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*STEPLIST* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *STEPLIST* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*STEPLIST*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*STEPTRACE* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #((T . T) *STEPTRACE* SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*STEPTRACE*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*CALLIST* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(NIL *CALLIST* SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*CALLIST*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 80 2 23 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 17 23 26 25 0 23 14 26 1 24 23 14 27 1 25 23 14 28 1 23 23 27 27 2 27 28 23 14 27 1 27 23 27 27 1 27 23 14 27 1 27 23 14 28 1 22 23 14 29 1 21 23 14 30 1 20 23 14 31 1 19 23 14 32 1 18 23 14 33 1 17 23 27 32 2 32 33 23 14 32 1 32 23 14 33 1 16 23 14 34 1 18 23 14 35 1 15 23 27 35 2 35 15 23 14 35 1 35 23 27 34 2 34 35 23 14 34 1 34 23 27 28 7 28 29 30 31 32 33 34 23 14 28 1 28 23 14 29 1 22 23 14 30 1 14 23 14 31 1 13 23 14 32 1 12 23 14 33 1 18 23 14 34 1 1 23 27 33 2 33 34 23 14 33 1 33 23 27 32 2 32 33 23 14 32 1 32 23 27 31 2 31 32 23 14 31 1 31 23 27 29 3 29 30 31 23 14 29 1 29 23 14 30 1 11 23 14 31 1 10 23 27 30 2 30 31 23 14 30 1 30 23 14 31 1 9 23 27 31 1 31 23 14 31 1 31 23 14 32 1 8 23 14 33 1 21 23 14 34 1 10 23 27 32 3 32 33 34 23 14 32 1 32 23 14 33 1 8 23 14 34 1 7 23 14 35 1 10 23 27 33 3 33 34 35 23 14 33 1 33 23 14 34 1 6 23 14 35 1 18 23 14 36 1 1 23 27 35 2 35 36 23 14 35 1 35 23 14 36 1 10 23 27 34 3 34 35 36 23 14 34 1 34 23 14 35 1 22 23 14 36 1 25 23 14 37 1 5 23 14 38 1 18 23 14 39 1 1 23 27 38 2 38 39 23 14 38 1 38 23 14 39 1 4 23 14 40 1 3 23 27 39 2 39 40 23 14 39 1 39 23 14 40 1 23 23 14 41 1 23 23 27 37 5 37 38 39 40 41 23 14 37 1 37 23 27 35 3 35 36 37 23 14 35 1 35 23 14 36 1 11 23 14 37 1 10 23 27 36 2 36 37 23 14 36 1 36 23 14 37 1 8 23 14 38 1 21 23 14 39 1 10 23 27 37 3 37 38 39 23 14 37 1 37 23 14 38 1 8 23 14 39 1 2 23 14 40 1 10 23 27 38 3 38 39 40 23 14 38 1 38 23 14 39 1 6 23 14 40 1 25 23 14 41 1 10 23 27 39 3 39 40 41 23 14 39 1 39 23 14 40 1 11 23 14 41 1 10 23 27 40 2 40 41 23 14 40 1 40 23 14 41 1 25 25 27 0 16 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 80 3 0 2 17 1 3 51 1 4 0 25 28 0 2 4 3) #(0 20 630) #(STEP COERCE-TO-MACRO XLISP::INSTALL-FUNCTION " <==< " EVAL-HOOK-FUNCTION FUNCTION EVALHOOK PRIN1 " >==> " PRINC STEP-FLUSH *DEBUG-IO* TERPRI CAR LIST *CALLIST* T *STEPTRACE* *ALL* QUOTE *FCN* 0 *HOOKLEVEL* SETQ NIL LET GENSYM APPEND APPLY) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(EVAL-HOOK-FUNCTION #K(#(80 3 35 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 6 0 37 38 0 37 39 38 35 40 61 112 40 40 49 35 40 0 21 1 1 62 1 23 36 0 2 1 2 38 37 40 50 2 17 3 40 32 38 37 41 16 1 42 50 2 17 4 41 42 38 37 41 23 38 41 1 41 21 0 5 6 41 38 37 42 38 35 43 3 71 42 43 41 1 7 0 37 41 21 0 17 8 41 38 37 41 21 0 9 10 41 16 1 42 38 39 43 23 40 41 2 42 43 1 11 0 37 41 21 0 17 12 41 38 41 41 79 41 37 0 38 41 41 16 41 41 21 0 13 14 41 38 41 42 79 42 33 0 23 42 0 1 1 38 39 41 23 43 41 2 1 41 21 0 15 16 41 39 44 42 23 45 38 4 1 42 37 2 1 59 23 45 38 4 1 37 37 2 1 59 23 42 0 1 1 38 41 40 79 40 33 0 49 37 32 0 38 46 40 23 47 0 2 31 40 23 48 39 0 41 39 30 40 21 0 19 18 40 41 39 3 40 21 0 20 21 40 39 44 40 23 45 38 4 1 40 37 2 1 59 41 39 29 40 21 0 23 22 40 41 39 4 40 21 0 24 25 40 23 45 38 4 1 37 37 2 1 59 50 1 26 27 39 28 49 37 33 0 39 44 40 23 45 38 4 1 40 37 2 1 59 0 39 40 50 1 28 29 40 27 23 49 0 0 1 2 50 1 30 31 39 26 23 50 0 0 1 2 50 1 32 33 39 25 38 46 41 23 51 0 1 41 38 46 41 23 52 0 2 1 41 1 2 50 1 34 35 39 24 38 46 41 23 47 0 2 5 41 38 46 41 23 53 41 1 41 49 37 41 0 23 54 0 0 1 2 50 1 36 37 39 23 38 35 41 61 109 41 41 49 37 41 0 1 2 50 1 38 39 39 22 38 46 41 23 47 0 2 6 41 38 46 41 23 53 41 1 41 23 55 0 1 41 23 54 0 0 1 2 50 1 40 41 39 21 38 46 41 23 47 0 2 7 41 38 46 41 23 53 41 1 41 23 56 0 1 41 23 54 0 0 1 2 50 1 42 46 39 20 38 41 41 38 41 42 16 42 42 21 0 43 44 42 0 37 42 1 45 0 33 42 78 41 42 0 38 46 41 23 47 0 2 8 41 38 41 41 16 41 41 38 46 42 23 57 0 2 41 42 1 2 50 1 47 48 39 19 49 37 37 0 1 2 50 1 49 50 39 18 38 46 41 23 47 0 2 9 41 38 46 41 23 53 41 1 41 23 58 0 2 41 2 23 54 0 0 1 2 50 1 51 52 39 17 38 46 41 23 47 0 2 10 41 38 46 41 23 53 41 1 41 23 45 38 4 41 37 37 2 23 54 0 0 1 59 50 1 53 54 39 16 38 46 41 23 47 0 2 11 41 38 46 41 23 53 41 1 41 23 59 0 1 41 23 54 0 0 1 2 50 1 55 56 39 15 38 46 41 23 47 0 2 12 41 38 46 41 23 53 41 1 41 23 60 0 1 41 23 54 0 0 1 2 50 1 57 58 39 14 23 61 0 1 2 1 2 38 46 41 23 47 0 2 13 41 1 2 23 62 0 0 39 63 40 23 64 38 2 40 38 23 65 0 0 38 41 40 17 40 40 21 0 60 61 40 38 46 41 23 51 0 1 41 38 35 41 23 66 0 1 41 38 35 41 38 46 42 23 47 0 2 41 42 38 46 41 23 47 0 2 34 41 38 46 41 23 57 0 2 38 41 23 67 0 0 1 68 23 68 40 1 1 21 0 63 65 40 38 41 41 16 41 41 21 0 64 65 41 38 46 41 23 51 0 1 41 38 35 41 23 66 0 1 41 38 46 41 23 47 0 2 36 41 38 46 41 23 57 0 2 1 41 38 46 41 23 47 0 2 35 41 23 63 38 4 1 37 37 2 38 35 40 61 109 40 40 49 35 40 0 23 68 40 1 1 21 0 66 68 40 38 41 40 16 40 40 21 0 67 68 40 38 46 40 23 57 0 2 38 40 11 0 38) #(0 61 67 76 88 101 114 117 122 130 144 147 152 170 182 196 209 219 257 261 266 279 288 292 297 307 313 330 339 345 351 357 363 382 388 415 421 434 440 468 474 502 508 522 527 530 560 566 572 578 607 613 644 650 678 684 712 718 725 736 764 810 816 826 837 880 909 920 929) #(#\Space #\Newline "Go to fn.: " "Bkpt.: " "Clear: " "Trace = " "Eval: " "Return: " "Depth: " "Len.: " "Bad command.  Type h for help
" #\e #\. #\# #\r #\x #\q #\t #\c #\b #\u #\f #\p #\h #\w #\g #\s #\n " :" *ALL* T " <==< " " = " "         " NIL *HOOKLEVEL* STEP-ADD-LEVEL *FCN* NUMBERP *STEPLIST* MEMBER *STEPTRACE* STEP-PRINT-COMPRESSED IS-BRK-IN-FORM EVAL-HOOK-FUNCTION LIST *DEBUG-IO* PRINC GET-KEY STEP-BAKTRACE STEP-HELP TERPRI PPRINT READ STEP-FLUSH STEP-SET-BREAKS STEP-CLEAR-BREAKS PRIN1 STEP-DO-FORM STEP-SET-DEPTH STEP-SET-LENGTH STEP-PRINT-ENV STEP-FIX-LEVELS EVALHOOK APPLY STEP-FIX-THROW STEP-SPACES STEP-PRUNE-LEVEL SYMBOLP) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-PRINT-COMPRESSED #K(#(80 2 5 0 1 2 3 4 4 38 5 7 23 6 0 1 7 38 7 7 2 109 6 7 7 23 8 0 1 7 38 7 7 38 5 8 23 9 0 2 7 8 38 5 7 23 9 0 2 5 7 38 10 7 38 11 8 69 4 3 1 2 70 38 5 7 25 9 0 2 2 7 49 12 7 0 49 13 8 0 38 5 10 23 14 0 2 1 10 1 1) #(0 62 72) #(" " T (*PRINT-LENGTH* *PRINT-LEVEL*) " >==> " 20 *DEBUG-IO* TERPRI *HOOKLEVEL* STEP-SPACES PRINC *STEPPER-DEPTH* *STEPPER-LENGTH* *PRINT-LEVEL* *PRINT-LENGTH* PRIN1) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-SPACES #K(#(80 2 3 0 1 2 2 0 4 5 37 60 1 2 5 1 38 3 6 23 4 0 2 2 6 61 112 5 5 37 60 1 2 5 1 11 0 3) #(0 16 35) #(" " NIL 0 *DEBUG-IO* PRINC) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-FLUSH #K(#(80 1 2 0 1 1 38 2 3 23 3 3 1 3 50 1 2 1 3 1 38 2 3 23 3 3 1 3 50 1 2 1 3 1 11 0 2) #(0 20 34) #(#\Newline NIL *DEBUG-IO* READ-CHAR) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-HELP #K(#(80 1 22 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 1 38 22 23 23 23 0 1 23 38 22 23 23 24 0 2 23 22 38 22 23 23 24 0 2 23 21 38 22 23 23 24 0 2 23 20 38 22 23 23 24 0 2 23 19 38 22 23 23 24 0 2 23 18 38 22 23 23 24 0 2 23 17 38 22 23 23 24 0 2 23 16 38 22 23 23 24 0 2 23 15 38 22 23 23 24 0 2 23 14 38 22 23 23 24 0 2 23 13 38 22 23 23 24 0 2 23 12 38 22 23 23 24 0 2 23 11 38 22 23 23 24 0 2 23 10 38 22 23 23 24 0 2 23 9 38 22 23 23 24 0 2 23 8 38 22 23 23 24 0 2 23 7 38 22 23 23 24 0 2 23 6 38 22 23 23 24 0 2 23 5 38 22 23 23 24 0 2 23 4 38 22 23 23 24 0 2 23 3 38 22 23 23 24 0 2 23 2 38 22 23 23 24 0 2 23 1 38 22 23 25 23 0 1 23) #(0) #("          h - print this summary~%" "       . nn - set print length to nn~%" "       # nn - set print depth to nn~%" "   r <expr> - execute and return expression~%" "   x <expr> - execute expression in current environment~%" "          e - print environment~%" "          p - pretty-print current form (uncompressed)~%" "          q - quit stepper, continue execution~%" "          t - toggle trace on/off~%" "          w - where am I? -- backtrace~%" "          u - go up; continue until enclosing form is done~%" "          g - go until a breakpoint is reached~%" " c *all*    - clear all breakpoints~%" " c <list>   - clear breakpoint at each function in list~%" " c FUNCTION - clear breakpoint at FUNCTION~%" " b <list>   - set breakpoint at each function in list~%" " b FUNCTION - set breakpoint at FUNCTION~%" " f FUNCTION - go until FUNCTION is called~%" " s or <cr>  - step over form~%" " n or space - next form~%" "----------------~%" "Stepper Commands~%" *DEBUG-IO* TERPRI FORMAT) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-DO-FORM #K(#(80 3 2 0 1 2 38 2 5 23 3 0 1 5 38 2 5 38 4 6 23 5 0 2 5 6 38 4 5 23 5 0 2 4 5 23 6 5 4 1 3 3 2 38 4 6 25 7 0 2 5 6) #(0) #(NIL " res: " *HOOKLEVEL* STEP-SPACES *DEBUG-IO* PRINC EVALHOOK PRIN1) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-SET-DEPTH #K(#(80 2 1 0 1 23 1 3 1 1 21 0 1 2 3 23 2 3 1 1 49 3 3 0 57 0 49 3 2 0 57 0) #(0 15 26) #(3 NUMBERP TRUNCATE *STEPPER-DEPTH*) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-SET-LENGTH #K(#(80 2 1 0 1 23 1 3 1 1 21 0 1 2 3 23 2 3 1 1 49 3 3 0 57 0 49 3 2 0 57 0) #(0 15 26) #(3 NUMBERP TRUNCATE *STEPPER-LENGTH*) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-PRINT-ENV #K(#(80 2 1 0 2 38 1 3 23 2 0 1 3 38 3 3 23 4 0 1 3 38 3 3 38 1 4 23 5 0 2 3 4 38 1 3 23 5 0 2 2 3 38 1 3 23 6 0 2 1 3 38 1 3 25 2 0 1 3) #(0) #(" env: " *DEBUG-IO* TERPRI *HOOKLEVEL* STEP-SPACES PRINC PRIN1) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-SET-BREAKS #K(#(80 2 2 0 1 1 21 0 1 6 1 23 2 4 1 1 21 0 2 3 4 38 3 4 20 1 4 4 49 3 4 0 57 0 23 4 4 1 1 21 0 4 5 4 16 1 4 23 5 0 1 4 17 1 4 25 5 0 1 4 11 0 2 11 0 3) #(0 11 21 34 44 60 63) #(NIL T SYMBOLP *STEPLIST* LISTP STEP-SET-BREAKS) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-CLEAR-BREAKS #K(#(80 2 3 0 1 2 1 21 0 1 8 1 50 1 2 3 1 3 49 3 2 0 57 0 23 4 5 1 1 21 0 4 5 5 38 3 5 25 5 0 2 1 5 23 6 5 1 1 21 0 6 7 5 16 1 5 23 7 0 1 5 17 1 5 25 7 0 1 5 11 0 2 11 0 4) #(0 12 18 24 34 43 53 69 72) #(NIL *ALL* T *STEPLIST* SYMBOLP DELETE LISTP STEP-CLEAR-BREAKS) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-BAKTRACE #K(#(80 1 4 0 1 2 3 6 0 4 5 0 4 6 38 4 5 38 5 6 37 71 1 5 6 2 38 6 7 23 7 0 1 7 23 8 0 1 6 38 6 7 23 9 0 2 6 7 38 6 7 23 10 0 2 3 7 16 5 7 21 1 2 3 7 38 6 8 71 2 3 5 9 71 2 1 5 10 23 11 0 4 8 1 9 10 1 4 16 5 8 38 6 9 23 9 0 2 8 9 17 5 5 61 109 6 6 37 71 1 5 6 2 38 6 7 25 7 0 1 7) #(0 26 65 88 100 113) #("~s ~s" 0 " " NIL *CALLIST* *HOOKLEVEL* *DEBUG-IO* TERPRI STEP-SPACES PRIN1 PRINC FORMAT) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-ADD-LEVEL #K(#(80 3 3 0 1 2 3 16 1 6 60 6 5 7 2 1 16 1 6 1 8 71 2 2 1 7 23 3 7 1 7 21 0 3 4 7 16 1 7 71 2 2 1 8 23 4 8 4 8 3 3 2 20 7 8 6 1 8 71 3 6 1 7 50 0 5 6 7 4 16 1 7 23 5 8 1 1 20 7 8 6 1 8 0 3 6 1 8 16 1 7 71 2 2 1 8 20 7 8 6 38 6 7 20 6 7 6 49 6 6 0 57 0) #(0 16 21 36 58 69 83 88 100) #(NIL QUOTE #((BLOCK RETURN-FROM) (CATCH THROW)) SYMBOLP EVALHOOK CADADR *CALLIST*) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-PRUNE-LEVEL #K(#(80 1 0 1 38 0 1 61 109 1 1 49 0 1 0 38 1 1 17 1 1 49 1 1 0 57 0) #(0) #(*HOOKLEVEL* *CALLIST*) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-FIX-LEVELS #K(#(80 1 7 0 1 2 3 4 5 6 3 38 7 8 16 8 8 50 0 1 6 8 7 38 7 8 21 0 2 5 8 38 7 8 16 8 8 23 8 8 2 8 1 21 0 3 4 8 11 0 6 23 9 0 0 1 1 11 0 6 38 7 8 16 8 8 50 0 26 7 8 2 38 7 9 16 9 9 21 1 8 10 9 38 7 9 71 2 3 9 9 50 0 9 10 9 4 38 7 9 71 2 1 9 9 21 0 10 26 9 38 7 8 16 8 8 21 1 11 12 8 38 7 9 71 2 3 9 9 40 9 4 8 1 13 0 6 8 21 0 14 25 8 38 7 8 71 2 1 8 8 23 9 0 0 38 7 9 21 0 16 24 9 38 7 9 16 9 9 40 8 9 9 21 0 22 17 9 38 7 10 16 10 10 21 1 18 21 10 38 7 10 71 2 3 10 10 50 0 19 20 10 5 38 7 10 71 2 1 10 10 40 10 8 9 1 22 0 6 9 1 22 0 6 9 21 0 23 15 9 11 0 6 1 15 11 0 6 11 0 6 23 9 0 0 38 7 8 21 0 27 29 8 38 7 8 16 8 8 23 8 8 2 8 3 21 0 28 26 8 11 0 6 1 26 11 0 6) #(0 23 31 48 51 57 60 72 83 97 110 121 135 138 143 151 163 178 189 203 217 222 225 230 235 238 241 253 270 275) #((LOOP DO DO* DOLIST DOTIMES PROG PROG* TAGBODY) RETURN (LOOP DO DO* DOLIST DOTIMES PROG PROG*) RETURN-FROM BLOCK NIL GO *CALLIST* MEMBER STEP-PRUNE-LEVEL) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STEP-FIX-THROW #K(#(80 1 3 0 1 2 3 38 3 4 16 4 4 21 1 1 2 4 38 3 5 71 2 3 5 5 40 5 1 4 1 3 0 3 4 21 0 4 14 4 38 3 4 71 2 1 4 4 23 4 0 0 38 3 5 21 0 6 13 5 38 3 5 16 5 5 21 1 7 10 5 38 3 6 71 2 3 6 6 50 0 8 9 6 2 38 3 6 71 2 1 6 6 40 6 4 5 1 11 0 3 5 1 11 0 3 5 21 0 12 5 5 11 0 3 1 5 11 0 3 11 0 3) #(0 18 32 35 40 48 60 71 85 99 104 107 112 117 120) #(THROW CATCH NIL *CALLIST* STEP-PRUNE-LEVEL) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(IS-BRK-IN-FORM #K(#(80 3 2 0 0 3 52 4 1 5 6 57 0 51 2 7 2 2 6 23 1 0 2 7 1 12 1 3 53 6 80 4 2 2 0 1 23 3 6 1 3 21 0 3 6 6 23 4 6 2 3 1 21 0 4 5 6 12 1 4 53 2 11 0 5 23 5 6 1 3 21 0 8 7 6 23 6 6 1 3 21 0 9 10 6 23 7 6 2 3 1 1 11 0 5 6 21 0 12 13 6 12 1 4 53 2 11 0 5) #(0 13 30 46 57 62 65 75 80 85 93 96 101 106) #(NIL MAPCAR T LISTP IS-BRK-IN-FORM SYMBOLP FUNCTIONP MEMBER) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(GET-KEY #K(#(80 1 3 0 1 2 2 0 3 4 0 4 5 21 0 1 2 5 0 3 5 1 3 0 1 5 21 0 5 4 5 40 4 2 5 21 0 6 12 5 23 3 4 0 0 4 5 21 0 7 8 5 0 3 5 1 9 0 1 5 21 0 11 10 5 40 4 2 5 21 0 6 12 5 25 4 0 1 4) #(0 18 23 26 31 35 40 52 57 60 65 69 74) #(T #\Newline NIL READ-CHAR CHAR-DOWNCASE) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
