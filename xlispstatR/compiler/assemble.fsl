(XLISP::CHECK-FSL-VERSION 1 4)
#K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 2 1 4 23 4 0 2 2 3 49 5 4 0 57 0) #(0 17 23) #(NIL "can't find package ~s" "XLSCMP" FIND-PACKAGE ERROR *PACKAGE*) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*OPCODE-TRANSLATIONS* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(NIL *OPCODE-TRANSLATIONS* SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*OPCODE-TRANSLATIONS*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*OPCODE-SYMBOLS* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #((%COPY %GOTO %ARITH2 %ARITH-PRED2 %SET-SVREF %SVREF %SET-AREF1 %AREF1 %SET-ELT %ELT %SET-ONE-VALUE %SET-ONE-VALUE-RETURN %SET-VALUES %SET-VALUES-RETURN %SET-VALUES-LIST %SET-VALUES-LIST-RETURN %CAR %CDR %RPLACA %RPLACD %CONS %TEST-1 %SAVE-MVCALL %SAVE-CALL %MVCALL %CALL %SAVE-MVLCALL %SAVE-LCALL %MVLCALL %LCALL %SAVE-MVVCALL %SAVE-VCALL %MVVCALL %VCALL %MAKE-CELL %CELL-VALUE %SET-CELL-VALUE %TEST-ARITH-2 %SYMVAL %SYMFUN %EQ %EQL %EQUAL %CONSP %ENDP %SET-GET %GET %SET-NTH %NTH %SET-SYMVAL %TEST-2 %MAKE-CLOSURE %CATCH-BLOCK %THROW-RETURN-FROM %CATCH-TAGBODY %THROW-GO %UNWIND-PROTECT %RETURN %GET-ONE-VALUE %GET-VALUES %CASE %ARITH1 %SLOT-VALUE %SET-SLOT-VALUE %SUPPLIED-P %CATCH %THROW %SET-AREF2 %AREF2 %DYNAMIC-BIND %DYNAMIC-UNBIND %CXR %ERRSET %NTH-VALUE %MAKE-Y-CLOSURES %PUSH-VALUES %POP-VALUES %INITIALIZE %SET-CAR %SET-CDR %INITIALIZE-0 %STOP %SWAP %LDCONST %NCASE %MAKE-CLOSURES %SET-CLOSURE-DATA %SET-CLOSURE-CODE %LDNOTSUPP %LDMVARGS %NOT %NEW-BLOCK %NEW-TAGBODY %NEW-GO %NEW-CATCH %NEW-ERRSET %NEW-UNWIND-PROTECT %GET-OPTARG %MAKE-KEYARGS %CHECK-LAST-KEYARG %GET-KEYARG %NEW-DYNAMIC-BIND %NEW-DYNAMIC-UNBIND %STRUCT-OP) *OPCODE-SYMBOLS* SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*OPCODE-SYMBOLS*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 3 0 1 2 4 0 3 4 38 3 5 21 0 1 2 5 16 5 6 20 6 4 6 38 4 7 20 6 7 6 49 4 6 0 2 43 4 1 4 17 5 5 21 0 1 2 5 11 0 2) #(0 18 49) #(1 NIL 0 *OPCODE-SYMBOLS* *OPCODE-TRANSLATIONS*) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(ENCODE-OPCODES #K(#(80 2 0 1 38 0 2 25 1 0 2 2 1) #(0) #(*OPCODE-TRANSLATIONS* SUBLIS) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(ASSEMBLE #K(#(80 2 11 0 1 2 3 4 5 6 7 8 9 10 21 16 1 13 71 2 2 1 14 23 11 14 2 14 12 71 3 4 1 15 23 12 16 1 1 21 0 1 2 16 23 12 17 1 1 23 11 16 2 17 12 1 3 0 11 16 0 13 17 0 11 18 0 11 19 23 13 17 1 17 0 10 20 0 17 21 16 21 22 21 1 4 7 21 23 14 23 1 22 21 0 5 6 23 20 22 20 24 20 24 18 18 2 43 20 3 20 17 21 21 16 21 22 21 1 4 7 21 23 15 17 2 18 17 34 11 23 51 21 24 1 23 23 16 0 2 24 17 35 23 24 21 0 8 9 24 35 23 25 23 17 25 1 25 23 18 0 2 2 25 23 19 23 1 18 23 20 19 1 23 0 10 23 0 11 24 0 17 25 16 25 26 21 1 10 20 25 0 26 27 21 1 11 18 27 0 26 28 16 28 29 21 1 12 19 28 23 21 30 3 10 29 9 21 0 13 14 30 2 43 23 3 23 20 29 24 24 1 17 23 21 31 3 8 29 7 21 0 15 16 31 2 47 29 5 31 23 22 31 1 31 23 23 32 2 29 5 2 43 23 4 23 2 43 31 8 33 20 33 24 24 20 32 24 24 1 17 23 18 0 1 6 17 28 28 16 28 29 21 1 12 19 28 6 19 26 23 0 17 25 25 16 25 26 21 1 10 20 25 23 24 17 1 24 23 11 27 2 17 12 23 25 28 2 15 18 17 28 28 25 26 0 5 27 19 14 28 16 80 3 1 9 1 21 1 22 23 2 16 2 4 23 14 4 1 4 1 24 0 3 4 21 0 25 26 4 35 1 4 20 2 4 4 36 1 4 0 57 0 11 0 3) #(0 44 57 60 88 98 111 122 150 164 191 199 210 222 233 245 281 286 297 302 313 342 352 362 365 370 383) #("unsupported opcodes -- ~a" 1 2 256 "operand out of range" 32767 128 127 0 NIL VECTOR COERCE FOURTH ENCODE-OPCODES SYMBOLP SUBLIS MAPC REMOVE-DUPLICATES ERROR LENGTH MAKE-ARRAY <= FLOOR REM NREVERSE ASSOC MAKE-BYTE-CODE) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
