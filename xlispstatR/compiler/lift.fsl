(XLISP::CHECK-FSL-VERSION 1 4)
#K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 2 1 4 23 4 0 2 2 3 49 5 4 0 57 0) #(0 17 23) #(NIL "can't find package ~s" "XLSCMP" FIND-PACKAGE ERROR *PACKAGE*) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*PIECES* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*PIECES*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FREE-VARIABLE-CANDIDATES #K(#(80 2 2 0 1 1 23 2 4 1 1 23 3 4 2 4 3 21 0 1 2 4 23 4 4 2 1 2 25 5 0 1 4 25 6 0 1 1) #(0 22 33) #(0 %THROW-GO CALL-NODE-FUNCTION GFUN-EQ CALL-NODE-ARG LIST CALL-NODE-ARGS) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIND-FREE-VARIABLES #K(#(80 2 2 0 1 8 23 2 0 1 1 23 3 4 1 1 0 3 5 21 0 2 16 4 16 4 6 17 4 4 23 4 7 1 6 21 0 3 14 7 23 5 8 1 6 16 8 9 21 1 4 14 8 0 9 10 23 6 11 1 10 21 0 5 10 11 23 7 11 1 10 21 0 6 9 11 50 0 7 8 11 1 0 3 10 1 11 23 8 11 1 11 21 0 6 9 11 0 2 10 1 11 0 3 10 21 0 12 13 10 20 9 5 5 17 8 8 16 8 9 21 1 4 14 8 23 9 6 1 6 16 6 7 21 1 15 1 6 20 7 4 4 17 6 6 16 6 7 21 1 15 1 6 25 10 0 1 5) #(0 19 24 40 53 66 76 82 87 97 102 105 110 114 125 138 153) #(T NIL LAMBDA-NODE-ARGLIST LIST CALL-NODE-P FREE-VARIABLE-CANDIDATES LOCAL-SYMBOL-NODE-P SYMBOL-NODE-OWNER NODE-PARENT NODE-CHILDREN REMOVE-DUPLICATES) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIND-ALL-FREE-VARIABLES #K(#(80 2 1 0 5 0 2 3 0 1 4 16 4 5 21 1 1 4 4 23 1 6 1 5 16 6 7 21 1 2 3 6 23 2 3 2 7 3 17 6 6 16 6 7 21 1 2 3 6 17 4 4 16 4 5 21 1 1 4 4 11 0 3) #(0 19 32 49 60) #(NIL FIND-FREE-VARIABLES ADJOIN) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIND-AND-FIX-LIFTABLE-LAMBDAS #K(#(80 2 3 0 1 2 11 23 3 5 1 1 34 4 6 34 4 7 21 0 2 10 5 16 5 8 17 5 5 23 4 9 1 8 21 0 3 8 9 23 5 10 1 8 23 6 11 1 10 21 0 4 5 11 23 7 11 1 10 23 8 12 1 8 23 9 13 1 10 51 11 13 2 7 13 23 10 0 3 13 11 12 1 8 23 11 10 1 10 60 10 3 7 6 1 8 23 12 10 2 8 2 34 4 11 34 4 12 23 13 13 1 8 23 8 14 1 8 17 14 14 51 14 15 3 6 12 11 23 14 0 3 15 13 14 35 11 13 35 12 14 23 15 0 4 8 13 14 10 23 16 8 1 8 16 8 9 21 1 9 1 8 20 9 5 5 17 8 8 16 8 9 21 1 9 1 8 35 7 8 35 6 9 25 3 0 2 8 9 80 5 1 2 2 27 17 6 1 4 21 0 12 13 6 23 17 0 3 3 4 2 23 3 6 2 3 4 35 1 7 20 6 7 6 36 1 6 0 57 0 11 0 5 80 6 1 2 2 27 17 7 1 5 21 0 15 16 7 35 3 7 20 4 7 7 36 3 7 0 35 2 7 20 5 7 7 36 2 7 0 23 3 7 2 4 5 35 1 8 20 7 8 7 36 1 7 0 57 0 11 0 6 80 2 2 18 2 1 23 6 4 1 1 21 0 18 21 4 23 19 4 1 1 21 0 19 20 4 11 0 3 11 0 2 11 0 3) #(0 18 23 39 54 84 94 96 149 162 177 189 204 230 233 248 289 292 308 318 321 324) #(0 #(%Y-LIST) NIL LIST CALL-NODE-P CALL-NODE-FUNCTION LAMBDA-NODE-P LAMBDA-NODE-ARGLIST CALL-NODE-ARGS LAMBDA-NODE-BODY MAPCAR GFUN-SYMBOL CALL-NODE-ARG FIND-Y-LIST-NAMES MAPC FIX-LIFTABLE-Y-LAMBDAS NODE-CHILDREN FIX-LIFTABLE-LAMBDA T CONTINUATION-NODE-P) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(NEW-LVAR-NODE #K(#(80 2 0 1 23 0 2 1 1 25 1 0 1 2) #(0) #(LEAF-NODE-VALUE MAKE-VARIABLE-NODE) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(NEW-LFUN-NODE #K(#(80 2 0 1 23 0 2 1 1 25 1 0 1 2) #(0) #(LEAF-NODE-VALUE MAKE-VARIABLE-NODE) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(SUBSTITUTE-VARIABLE #K(#(80 4 1 0 2 23 1 5 2 2 3 16 5 6 21 1 1 2 5 23 2 0 3 1 6 4 17 5 5 16 5 6 21 1 1 2 5 11 0 4) #(0 19 37) #(NIL FIND-REFERENCES SUBSTITUTE-VALUE) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIX-LIFTABLE-LAMBDA-ARGLIST #K(#(80 3 0 6 39 0 3 23 1 3 2 3 2 23 2 4 1 1 16 4 5 17 4 6 23 3 6 2 3 6 20 5 6 4 23 4 0 2 1 4 0 3 4 16 4 5 21 1 1 2 4 23 5 0 2 5 1 17 4 4 16 4 5 21 1 1 2 4 23 6 6 1 1 16 6 7 23 7 8 1 3 2 43 7 8 7 78 6 7 0 51 3 6 1 1 25 8 0 3 6 2 3 80 4 0 0 25 9 0 3 3 2 1) #(0 51 68 102) #(NEW-LVAR-NODE MAPCAR LAMBDA-NODE-ARGLIST APPEND SET-LAMBDA-NODE-ARGLIST SET-SYMBOL-NODE-OWNER LAMBDA-NODE-LAMBDA-LIST LENGTH MAPC SUBSTITUTE-VARIABLE) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIX-LIFTABLE-LAMBDA-CALLS #K(#(80 4 3 0 1 2 7 23 3 7 2 1 2 16 7 8 21 1 1 6 7 16 8 9 17 8 10 37 61 2 3 10 5 23 4 11 1 9 16 11 12 17 11 13 23 5 13 2 3 13 20 12 13 11 23 6 0 2 9 11 1 5 23 7 11 1 9 23 8 11 2 11 4 21 0 4 5 11 23 4 11 1 9 23 5 11 2 11 3 23 6 0 2 9 11 17 7 7 16 7 8 21 1 1 6 7 11 0 6) #(0 21 33 62 78 95 106) #(%MAKE-CLOSURE 0 NIL FIND-REFERENCES CALL-NODE-ARGS APPEND SET-CALL-NODE-ARGS CALL-NODE-FUNCTION GFUN-EQ) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIX-LIFTABLE-LAMBDA #K(#(80 4 1 0 1 23 1 5 1 2 21 0 1 2 5 23 2 0 3 1 3 5 25 3 0 2 2 5 11 0 4) #(0 15 28) #(NIL FIND-FREE-VARIABLES FIX-LIFTABLE-LAMBDA-CALLS FIX-LIFTABLE-LAMBDA-ARGLIST) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIX-LIFTABLE-Y-LAMBDAS #K(#(80 5 2 0 1 5 23 2 7 1 3 21 0 1 8 7 0 2 8 16 8 9 21 1 2 5 8 20 4 3 10 16 10 11 21 1 3 4 10 23 3 0 3 9 11 7 17 10 10 16 10 11 21 1 3 4 10 17 8 8 16 8 9 21 1 2 5 8 51 9 10 1 7 23 4 0 3 10 2 3 23 5 10 1 1 23 5 10 1 10 23 6 11 1 10 23 7 11 2 11 5 21 0 6 7 11 23 8 11 1 10 23 9 11 2 11 7 25 10 0 2 10 11 11 0 6 11 0 6 80 4 0 0 25 11 0 2 3 1) #(0 16 27 39 57 68 106 123 126 129) #(%MAKE-Y-CLOSURES NIL FIND-ALL-FREE-VARIABLES FIX-LIFTABLE-LAMBDA-CALLS MAPC NODE-PARENT CALL-NODE-FUNCTION GFUN-EQ CALL-NODE-ARGS APPEND SET-CALL-NODE-ARGS FIX-LIFTABLE-LAMBDA-ARGLIST) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(LIFT-FIXED-LAMBDAS #K(#(80 2 1 0 6 0 1 3 16 3 4 21 1 1 2 3 16 4 5 71 2 2 4 6 23 1 7 1 6 23 2 8 1 5 23 3 0 2 7 6 23 4 0 2 8 5 23 5 0 2 5 2 23 6 5 2 5 6 38 7 6 20 5 6 5 49 7 5 0 17 3 3 16 3 4 21 1 1 2 3 11 0 2) #(0 16 80) #(NIL NODE-PARENT SYMBOL-NODE-OWNER CALL-NODE-DELETE-ARG LAMBDA-NODE-DELETE-ARG SET-SYMBOL-NODE-OWNER LIST *PIECES*) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(HOIST-ANONYMOUS-CLOSURES #K(#(80 2 3 0 1 2 11 23 3 5 1 1 21 0 2 16 5 16 5 6 17 5 5 23 4 7 1 6 21 0 3 14 7 23 5 8 1 6 23 6 9 1 8 21 0 4 5 9 0 9 8 1 6 23 7 8 2 8 2 21 0 14 7 8 23 8 8 1 6 0 4 9 0 4 10 0 8 11 16 11 12 21 1 8 12 11 23 6 13 1 12 21 0 9 11 13 23 9 14 1 12 21 0 11 10 14 23 10 14 1 3 23 11 14 1 14 20 14 9 9 20 12 10 10 23 12 15 2 12 8 23 13 0 3 6 15 14 17 11 11 16 11 12 21 1 8 12 11 21 0 13 14 10 23 14 13 0 23 15 0 2 6 13 39 16 14 23 17 15 2 9 13 23 18 13 3 14 15 10 23 15 0 2 13 6 23 19 6 1 6 16 6 7 21 1 15 1 6 20 7 5 5 17 6 6 16 6 7 21 1 15 1 6 11 0 4) #(0 12 17 33 48 53 59 64 86 96 106 137 148 153 185 198 213) #((%Y-LIST %CATCH %THROW %CATCH-BLOCK %THROW-RETURN-FROM %CATCH-TAGBODY %THROW-GO %ERRSET %UNWIND-PROTECT %DYNAMIC-BIND) "F" NIL LIST CALL-NODE-P CALL-NODE-FUNCTION LAMBDA-NODE-P GFUN-MEMBER CALL-NODE-ARGS CONTINUATION-NODE-P GENSYM MAKE-LEAF-NODE POSITION SET-CALL-NODE-ARG MAKE-NODE MOVE-NODE-TREE MAKE-CALL-NODE MAKE-LAMBDA-NODE APPLY NODE-CHILDREN) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIND-CLOSURE-REFERENCES #K(#(80 3 2 0 1 4 0 4 5 23 2 6 2 1 2 16 6 7 21 1 1 4 6 17 7 8 37 35 2 3 8 3 20 7 5 5 17 6 6 16 6 7 21 1 1 4 6 11 0 5) #(0 23 32 36 47) #(0 NIL FIND-REFERENCES) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INSERT-FLET-CLOSURES #K(#(80 2 1 0 11 23 1 3 1 1 0 2 4 0 2 5 23 2 6 1 1 23 3 7 1 3 23 4 8 1 3 0 6 9 16 9 10 21 1 1 6 9 23 5 11 1 10 21 0 2 5 11 23 6 12 1 10 21 0 5 3 12 23 7 12 2 10 6 48 12 7 12 23 8 13 2 12 8 21 0 4 5 13 20 12 4 4 20 13 5 5 17 9 9 16 9 10 21 1 1 6 9 21 0 7 8 5 39 9 11 23 10 11 2 11 4 51 10 12 0 23 11 0 3 12 11 5 51 9 12 1 3 25 11 0 3 12 4 11 11 0 2 80 4 1 12 4 23 13 5 0 23 4 6 1 1 23 14 0 2 6 5 23 15 7 1 4 23 16 8 1 3 23 17 8 2 8 5 23 18 7 3 7 8 2 25 14 0 2 7 6 80 3 2 19 0 4 0 2 5 16 5 6 21 1 11 12 5 16 6 7 17 6 8 2 45 8 3 8 23 20 0 3 7 8 1 17 5 5 16 5 6 21 1 11 12 5 11 0 4) #(0 42 52 62 83 91 102 107 139 142 191 208 237) #(NIL CALL-NODE-FUNCTION CALL-NODE-ARGS LAMBDA-NODE-ARGLIST LAMBDA-NODE-BODY LAMBDA-NODE-P CONTINUATION-NODE-P POSITION FIND-CLOSURE-REFERENCES NEW-LFUN-NODE MAPCAR MAPC %MAKE-CLOSURE MAKE-NODE MOVE-NODE-TREE GET-GFUN-NODE LIST MAKE-CONTINUATION-NODE MAKE-CALL-NODE 1 SET-CALL-NODE-ARG) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INSERT-LABELS-CLOSURES #K(#(80 2 2 0 1 10 23 2 4 1 1 0 3 5 0 3 6 0 4 7 16 7 8 21 1 1 5 7 23 3 9 1 8 23 4 9 1 9 21 0 4 2 9 23 5 10 2 8 1 21 0 3 4 10 20 8 5 5 20 10 6 6 17 7 7 16 7 8 21 1 1 5 7 21 0 6 7 5 23 6 9 0 39 7 10 23 8 10 2 10 5 51 8 11 0 23 9 0 3 11 10 6 23 10 0 2 1 9 39 11 11 23 12 12 1 2 23 13 13 2 10 9 23 14 9 4 11 12 13 5 25 10 0 2 9 1 11 0 3 80 3 2 15 1 4 0 2 5 16 5 6 21 1 9 10 5 16 6 7 17 6 8 2 45 8 3 8 23 16 0 3 7 8 1 17 5 5 16 5 6 21 1 9 10 5 11 0 4) #(0 28 43 54 62 73 78 136 139 156 185) #(%MAKE-Y-CLOSURES NIL FIND-Y-LIST-NAMES FIND-LAMBDA-BINDING CONTINUATION-NODE-P FIND-CLOSURE-REFERENCES MAKE-NODE NEW-LFUN-NODE MAPCAR MAPC MOVE-NODE-TREE MAKE-CALL-NODE GET-GFUN-NODE MAKE-CONTINUATION-NODE APPLY 1 SET-CALL-NODE-ARG) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INSERT-CLOSURES #K(#(80 2 2 0 1 3 23 2 4 1 1 21 0 1 5 4 23 3 5 1 1 23 4 6 1 5 21 0 2 3 6 23 5 0 1 1 1 5 23 6 5 2 5 2 21 0 4 5 5 23 7 0 1 1 23 8 4 1 1 16 4 5 21 1 6 7 4 23 9 0 1 5 17 4 4 16 4 5 21 1 6 7 4 11 0 3) #(0 16 31 38 49 54 67 83) #(%Y-LIST NIL CALL-NODE-P CALL-NODE-FUNCTION LAMBDA-NODE-P INSERT-FLET-CLOSURES GFUN-EQ INSERT-LABELS-CLOSURES NODE-CHILDREN INSERT-CLOSURES) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(LIFT-LAMBDAS #K(#(80 2 2 0 1 4 23 2 0 1 1 23 3 0 1 1 23 4 4 1 1 23 5 5 1 3 23 6 5 1 5 23 7 5 2 5 1 23 7 5 1 5 23 7 5 1 5 69 2 5 1 2 70 57 0 16 4 7 23 8 0 1 7 71 2 2 4 7 23 8 0 1 7 38 9 7 23 10 0 1 7 1 1) #(0 52 55) #((*PIECES*) "MAIN" HOIST-ANONYMOUS-CLOSURES INSERT-CLOSURES FIND-AND-FIX-LIFTABLE-LAMBDAS GENSYM MAKE-LEAF-NODE LIST LIFT-FIXED-LAMBDAS *PIECES* REVERSE) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(EXTRACT-CONSTANTS #K(#(80 2 4 0 1 2 3 11 23 4 6 1 1 0 5 7 21 0 2 15 6 16 6 8 17 6 6 23 5 9 1 8 23 5 10 1 8 16 10 11 21 1 3 1 10 23 6 12 1 11 21 0 4 13 12 23 7 13 1 8 23 8 13 2 13 4 21 0 5 6 13 23 9 14 2 11 9 3 61 2 14 13 1 7 0 5 13 21 0 13 8 13 23 10 13 1 11 21 0 9 14 13 23 9 13 2 11 9 0 11 14 23 11 15 2 14 7 21 0 10 11 15 71 2 2 15 14 1 12 23 12 15 1 3 23 13 15 1 15 23 4 16 2 14 15 20 16 7 7 0 15 14 47 13 9 14 0 1 14 20 11 6 6 17 10 10 16 10 11 21 1 3 1 10 21 0 16 17 7 23 14 8 0 23 15 9 1 1 23 16 0 2 9 8 39 17 9 39 18 10 23 19 10 2 10 7 23 20 10 2 10 8 39 21 11 23 19 11 2 11 7 23 22 8 3 9 10 11 23 15 9 1 1 25 16 0 2 8 9 11 0 5) #(0 16 21 45 55 71 84 87 92 102 122 129 152 159 163 174 179 239) #(2 "C" (%SYMVAL %SET-SYMVAL %SYMFUN) NIL LIST NODE-CHILDREN LEAF-NODE-P CALL-NODE-FUNCTION GFUN-MEMBER POSITION CONSTANT-NODE-P ASSOC GENSYM MAKE-LEAF-NODE MAKE-NODE LAMBDA-NODE-BODY MOVE-NODE-TREE MAKE-CALL-NODE SECOND MAPCAR MAKE-LAMBDA-NODE FIRST APPLY) 0 NIL) BYTE-CODE-CLOSE XLISP::INSTALL-FUNCTION) 0 NIL)
