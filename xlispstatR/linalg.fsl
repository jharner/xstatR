(XLISP::CHECK-FSL-VERSION 1 4)
#K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 2 1 4 23 4 0 2 2 3 49 5 4 0 57 0) #(0 17 23) #(NIL "can't find package ~s" "XLISP" FIND-PACKAGE ERROR *PACKAGE*) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #("linalg" PROVIDE) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((MATMULT %* INNER-PRODUCT CROSS-PRODUCT OUTER-PRODUCT IDENTITY-MATRIX) EXPORT) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MULTIPLY-MATRIX-MATRIX #K(#(80 3 10 0 1 2 3 4 5 6 7 8 9 11 23 10 13 2 1 2 21 0 1 2 13 39 11 14 12 3 14 4 3 1 3 39 12 14 12 3 14 6 5 59 3 13 14 15 23 13 16 2 1 15 23 13 17 2 2 15 23 14 18 2 16 12 23 14 19 2 16 11 23 14 20 2 17 12 23 14 21 2 17 11 23 15 22 2 18 21 38 16 23 23 17 22 3 22 23 14 37 61 5 4 20 19 23 18 0 1 8 31 13 0 16 10 10 21 18 19 11 17 12 21 16 12 19 12 22 12 21 25 13 0 2 22 9) #(0 25 35 43 106 111) #((ARRAY C-DCOMPLEX) C-DCOMPLEX (ARRAY C-DOUBLE) C-DOUBLE NIL "dimensions do not match" (ARRAY T) "n" 1 0 ANY-COMPLEX-ELEMENTS BLAS-ZGEMM BLAS-DGEMM COERCE ARRAY-DIMENSION LIST :ELEMENT-TYPE MAKE-ARRAY ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MULTIPLY-MATRIX-VECTOR #K(#(80 3 11 0 1 2 3 4 5 6 7 8 9 10 10 23 11 14 2 1 2 21 0 1 2 14 39 12 15 12 3 15 4 3 1 3 39 13 15 12 3 15 6 5 59 3 14 15 16 23 14 17 1 2 21 0 4 5 17 0 7 17 1 6 0 8 17 23 15 18 2 1 16 23 15 19 2 2 16 23 16 20 2 18 13 23 16 21 2 18 12 23 17 22 1 19 38 18 23 23 19 23 3 20 23 15 37 61 8 7 22 21 23 20 0 1 10 31 14 0 14 11 21 20 12 18 13 21 19 13 12 13 23 13 12 25 15 0 2 23 17) #(0 26 36 44 59 64 67 112 117) #((ARRAY C-DCOMPLEX) C-DCOMPLEX (ARRAY C-DOUBLE) C-DOUBLE LIST (ARRAY T) NIL "dimensions do not match" "t" 1 0 ANY-COMPLEX-ELEMENTS BLAS-ZGEMV BLAS-DGEMV LISTP COERCE ARRAY-DIMENSION LENGTH :ELEMENT-TYPE MAKE-ARRAY ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MULTIPLY-VECTOR-MATRIX #K(#(80 3 11 0 1 2 3 4 5 6 7 8 9 10 10 23 11 14 2 1 2 21 0 1 2 14 39 12 15 12 3 15 4 3 1 3 39 13 15 12 3 15 6 5 59 3 14 15 16 23 14 17 1 1 21 0 4 5 17 0 7 17 1 6 0 8 17 23 15 18 2 1 16 23 15 19 2 2 16 23 16 20 1 18 23 17 21 2 19 13 23 17 22 2 19 12 38 18 23 23 19 23 3 22 23 15 37 61 8 7 21 20 23 20 0 1 10 31 14 0 14 11 22 20 12 19 13 22 18 13 12 13 23 13 12 25 15 0 2 23 17) #(0 26 36 44 59 64 67 112 117) #((ARRAY C-DCOMPLEX) C-DCOMPLEX (ARRAY C-DOUBLE) C-DOUBLE LIST (ARRAY T) NIL "dimensions do not match" "n" 1 0 ANY-COMPLEX-ELEMENTS BLAS-ZGEMV BLAS-DGEMV LISTP COERCE LENGTH ARRAY-DIMENSION :ELEMENT-TYPE MAKE-ARRAY ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INNER-PRODUCT #K(#(77 1 3 1 6 6 0 1 2 3 4 5 6 23 7 10 2 1 2 21 0 1 5 10 21 0 2 3 3 39 8 11 1 4 39 9 11 12 2 11 4 1 6 39 10 11 12 2 11 5 59 2 10 11 23 11 12 2 1 11 23 11 13 2 2 11 23 12 14 1 12 23 12 15 1 13 37 61 8 7 15 14 23 13 0 1 7 33 10 0 7 14 13 9 8 12 9 8) #(0 24 29 34 37 43 50 82 87) #((ARRAY C-DCOMPLEX) (ARRAY C-DOUBLE) NIL "dimensions do not match" 1 0 #(T) ANY-COMPLEX-ELEMENTS BLAS-ZDOTC BLAS-ZDOTU BLAS-DDOT COERCE LENGTH ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(BINARY-MATMULT #K(#(80 3 1 0 1 23 1 4 1 1 21 0 1 6 4 23 1 4 1 2 21 0 2 3 4 25 2 0 2 1 2 23 3 4 1 2 21 0 4 5 4 25 4 0 2 1 2 2 42 1 2 0 57 0 23 3 4 1 1 21 0 7 12 4 23 1 4 1 2 21 0 8 9 4 25 5 0 2 1 2 23 3 4 1 2 21 0 10 11 4 25 6 0 3 1 2 3 2 42 1 2 0 57 0 2 42 1 2 0 57 0) #(0 15 25 31 41 47 54 64 74 80 90 97 104) #(NIL MATRIXP MULTIPLY-MATRIX-MATRIX SEQUENCEP MULTIPLY-MATRIX-VECTOR MULTIPLY-VECTOR-MATRIX INNER-PRODUCT) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MATMULT #K(#(77 2 2 0 0 2 39 0 3 38 1 4 25 2 0 4 3 2 4 1) #(0) #(BINARY-MATMULT :INITIAL-VALUE REDUCE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 1 39 1 2 25 2 0 2 1 2) #(0) #(%* MATMULT %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CROSS-PRODUCT #K(#(77 1 2 1 10 10 0 1 2 3 4 5 6 7 8 9 9 23 11 13 1 1 21 0 1 2 13 25 12 0 3 1 1 2 23 13 13 1 1 21 0 3 7 13 39 14 14 21 0 4 5 2 0 3 15 1 6 0 6 15 12 4 14 5 4 15 1 8 39 15 14 12 4 14 8 7 6 59 4 13 14 15 16 23 16 17 2 1 15 23 17 18 2 17 12 23 17 19 2 17 11 23 18 20 2 19 19 38 19 21 23 20 20 3 20 21 14 31 13 0 16 10 16 19 19 18 11 17 12 19 17 12 19 12 20 12 19 25 16 0 2 20 9) #(0 27 34 44 52 57 60 68 77) #("c" (ARRAY C-DCOMPLEX) C-DCOMPLEX "t" (ARRAY C-DOUBLE) C-DOUBLE (ARRAY T) "n" 1 0 #(T) SEQUENCEP INNER-PRODUCT ANY-COMPLEX-ELEMENTS BLAS-ZGEMM BLAS-DGEMM COERCE ARRAY-DIMENSION LIST :ELEMENT-TYPE MAKE-ARRAY) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(OUTER-PRODUCT #K(#(77 1 3 1 3 3 0 1 2 10 0 2 7 0 1 8 23 4 9 1 8 21 0 2 1 9 23 2 8 1 8 23 4 9 1 7 21 0 4 3 9 23 2 7 1 7 23 5 8 1 8 23 6 8 2 8 6 23 5 9 1 7 23 6 9 2 9 6 23 7 10 1 8 23 7 11 1 9 23 8 12 2 10 11 23 9 12 1 12 21 0 5 9 3 0 5 13 37 60 6 13 13 10 0 5 14 37 60 7 8 14 11 7 8 13 15 7 9 14 16 31 3 15 2 15 16 67 12 13 14 15 0 61 112 14 14 37 60 7 8 14 11 61 112 13 13 37 60 6 13 13 10 0 5 13 37 60 10 13 13 10 0 5 14 37 60 11 12 14 11 7 8 13 15 7 9 14 16 2 42 15 16 15 67 12 13 14 15 0 61 112 14 14 37 60 11 12 14 11 61 112 13 13 37 60 10 13 13 10 11 0 12) #(0 26 31 41 46 94 103 112 142 152 161 170 199 209) #(NIL 0 VECTOR #(NIL) COMPOUND-DATA-P COMPOUND-DATA-SEQ COERCE LENGTH LIST MAKE-ARRAY) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(IDENTITY-MATRIX #K(#(80 2 1 0 1 38 1 3 23 2 3 3 1 3 2 25 3 0 1 3) #(0) #(1 :INITIAL-ELEMENT MAKE-LIST DIAGONAL) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(TRANSPOSE EXPORT) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(TRANSPOSE #K(#(80 2 2 0 1 1 23 2 4 1 1 21 0 1 2 4 25 3 0 2 1 2 21 1 3 4 1 25 4 0 1 1 25 5 0 2 3 1) #(0 16 22 27 32) #((1 0) "bad argumant type - ~s" MATRIXP PERMUTE-ARRAY TRANSPOSE-LIST ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((MAKE-SWEEP-MATRIX SWEEP-OPERATOR) EXPORT) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-SWEEP-MATRIX #K(#(77 1 3 1 8 8 0 1 2 3 4 5 6 7 7 23 9 12 2 1 11 23 9 13 2 1 10 23 10 14 2 1 9 23 10 15 2 2 8 21 0 1 2 3 23 10 16 2 3 8 1 3 38 11 16 38 12 17 23 13 16 5 12 16 6 17 4 2 43 13 7 17 2 43 13 7 18 23 14 17 2 17 18 38 11 18 23 13 17 3 17 18 6 38 11 18 23 13 18 3 13 18 6 23 15 0 7 12 13 14 15 16 17 18 25 10 0 2 17 5) #(0 44 52 67) #(1.0 (ARRAY T) C-DOUBLE 2 (VECTOR C-DOUBLE) (ARRAY C-DOUBLE) 1 0 #(NIL) ARRAY-DIMENSION COERCE :ELEMENT-TYPE :INITIAL-ELEMENT MAKE-ARRAY LIST BASE-MAKE-SWEEP-MATRIX) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(SWEEP-OPERATOR #K(#(77 1 3 1 5 5 0 1 2 3 4 9 0 2 9 23 6 10 2 1 8 23 6 11 2 1 7 2 42 10 11 12 38 7 13 38 8 14 23 9 15 1 1 23 10 12 5 12 13 6 14 15 23 11 13 1 3 21 0 1 2 13 23 12 14 1 9 23 13 13 2 3 14 1 3 0 3 13 0 5 14 0 9 15 21 0 5 8 15 21 0 6 8 13 16 9 16 17 9 9 16 13 17 17 13 13 23 14 17 5 10 11 12 16 17 21 0 7 4 17 20 16 14 14 1 4 23 15 15 2 10 11 38 16 16 23 17 17 2 12 4 23 10 15 3 15 16 17 25 15 0 2 15 14) #(0 62 75 78 81 89 94 120 126) #((ARRAY T) NIL C-DOUBLE 1 0 #(1.0E-6) ARRAY-DIMENSION :ELEMENT-TYPE :INITIAL-CONTENTS COMPOUND-DATA-SEQ MAKE-ARRAY NUMBERP LENGTH REPEAT SWEEP-IN-PLACE LIST :DISPLACED-TO COERCE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(SQUARE-MATRIX-P #K(#(80 2 3 0 1 2 2 23 3 5 1 1 21 0 1 2 5 23 4 5 2 1 3 23 4 6 2 1 2 3 61 5 6 0 57 0 11 0 4) #(0 17 36) #(1 0 NIL MATRIXP ARRAY-DIMENSION) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 80 2 4 3 4 5 6 5 23 7 6 1 5 23 7 7 1 4 23 7 8 1 1 23 8 7 2 7 8 23 7 7 1 7 23 7 8 1 3 23 7 9 1 2 23 7 10 1 1 23 8 8 3 8 9 10 23 7 8 1 8 25 8 0 3 6 7 8 80 3 0 2 17 1 3 51 1 4 0 25 9 0 2 4 3) #(0 20 88) #(CHECK-SQUARE-MATRIX COERCE-TO-MACRO INSTALL-FUNCTION "not a square matrix -- ~s" ERROR SQUARE-MATRIX-P UNLESS LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 80 2 4 3 4 5 6 5 23 7 6 1 5 23 7 7 1 4 23 7 8 1 1 23 8 7 2 7 8 23 7 7 1 7 23 7 8 1 3 23 7 9 1 2 23 7 10 1 1 23 8 8 3 8 9 10 23 7 8 1 8 25 8 0 3 6 7 8 80 3 0 2 17 1 3 51 1 4 0 25 9 0 2 4 3) #(0 20 88) #(CHECK-MATRIX COERCE-TO-MACRO INSTALL-FUNCTION "not a matrix -- ~s" ERROR MATRIXP UNLESS LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((LU-DECOMP RCONDEST DETERMINANT INVERSE LU-SOLVE) EXPORT) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(LU-DECOMP #K(#(80 2 10 0 1 2 3 4 5 6 7 8 9 12 23 10 12 1 1 21 0 2 1 12 23 11 0 2 2 1 23 12 12 1 1 21 0 3 4 12 39 13 13 12 2 13 3 1 5 39 14 13 12 2 13 4 59 2 12 13 23 15 14 2 1 11 23 16 15 5 1 14 14 13 10 38 17 16 23 18 16 3 14 16 9 31 12 17 5 15 11 14 14 16 0 8 18 61 109 16 19 0 11 20 37 60 6 11 20 14 0 20 21 7 19 20 22 37 61 10 7 21 22 0 18 23 21 0 8 9 23 0 8 18 1 10 0 10 18 61 112 20 20 37 60 6 11 20 14 23 19 21 2 14 14 23 20 21 3 15 21 10 0 18 22 21 0 12 13 22 0 5 22 1 14 0 6 22 3 35 17 7 23 25 19 0 4 21 19 22 23) #(0 24 30 40 49 56 110 123 131 136 139 149 170 175 178) #("not a square matrix -- ~s" C-DCOMPLEX C-DOUBLE -1.0 1.0 0.0 NIL C-INT T 0 SQUARE-MATRIX-P ERROR ANY-COMPLEX-ELEMENTS LINPACK-ZGEFA LINPACK-DGEFA ARRAY-DIMENSION GENERIC-TO-LINALG :ELEMENT-TYPE MAKE-ARRAY LIST LINALG-TO-GENERIC) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RCONDEST #K(#(80 2 7 0 1 2 3 4 5 6 6 23 7 9 1 1 21 0 2 1 9 23 8 0 2 3 1 23 9 9 1 1 21 0 3 4 9 39 10 10 12 2 10 4 1 5 39 11 10 12 2 10 5 59 2 9 10 23 12 11 2 1 8 23 13 12 5 1 11 11 10 7 38 14 13 23 15 13 3 11 13 6 38 14 14 23 15 14 3 11 14 10 33 9 0 6 12 8 11 11 13 14) #(0 21 27 37 46 53) #(NIL "not a square matrix -- ~s" C-DCOMPLEX C-DOUBLE C-INT T 0 SQUARE-MATRIX-P ERROR ANY-COMPLEX-ELEMENTS LINPACK-ZGECO LINPACK-DGECO ARRAY-DIMENSION GENERIC-TO-LINALG :ELEMENT-TYPE MAKE-ARRAY) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DETERMINANT #K(#(80 2 10 0 1 2 3 4 5 6 7 8 9 9 23 10 12 1 1 21 0 2 1 12 23 11 0 2 3 1 23 12 12 1 1 21 0 3 4 12 39 13 13 39 14 14 12 3 13 14 4 1 5 39 15 13 39 16 14 12 3 13 14 5 59 3 12 13 14 23 17 15 2 1 11 23 18 16 5 1 15 15 14 10 38 19 17 23 20 17 3 15 17 9 38 19 18 23 20 18 3 8 18 14 38 19 19 23 20 19 3 15 19 14 31 12 0 5 16 11 15 15 17 31 13 0 8 16 11 15 15 17 18 19 7 7 18 11 19 7 18 6 20 23 21 20 2 7 20 2 42 19 20 0 57 0) #(0 24 30 40 53 64) #(NIL "not a square matrix -- ~s" C-DCOMPLEX C-DOUBLE 1 10 2 C-INT T 0 SQUARE-MATRIX-P ERROR ANY-COMPLEX-ELEMENTS LINPACK-ZGEFA LINPACK-ZGEDI LINPACK-DGEFA LINPACK-DGEDI ARRAY-DIMENSION GENERIC-TO-LINALG :ELEMENT-TYPE MAKE-ARRAY ^) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INVERSE #K(#(80 2 8 0 1 2 3 4 5 6 7 7 23 8 10 1 1 21 0 2 1 10 23 9 0 2 2 1 23 10 10 1 1 21 0 3 4 10 39 11 11 39 12 12 12 3 11 12 3 1 5 39 13 11 39 14 12 12 3 11 12 4 59 3 10 11 12 23 15 13 2 1 9 23 16 14 5 1 13 13 12 8 38 17 15 23 18 15 3 13 15 7 38 17 16 23 18 16 3 13 16 12 31 10 0 5 14 9 13 13 15 31 11 0 8 14 9 13 13 15 6 16 5 23 19 15 2 13 13 25 20 0 3 14 15 8) #(0 22 28 38 51 62) #("not a square matrix -- ~s" C-DCOMPLEX C-DOUBLE 1 NIL C-INT T 0 SQUARE-MATRIX-P ERROR ANY-COMPLEX-ELEMENTS LINPACK-ZGEFA LINPACK-ZGEDI LINPACK-DGEFA LINPACK-DGEDI ARRAY-DIMENSION GENERIC-TO-LINALG :ELEMENT-TYPE MAKE-ARRAY LIST LINALG-TO-GENERIC) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(LU-SOLVE #K(#(80 3 10 0 1 2 3 4 5 6 7 8 9 9 16 1 13 71 2 2 1 14 2 43 14 12 14 23 10 15 1 13 21 0 2 1 15 23 11 0 2 4 13 23 12 15 2 13 2 21 0 3 4 15 39 13 16 12 2 16 5 1 5 39 14 16 12 2 16 6 59 2 15 16 23 15 17 2 13 11 23 16 18 5 13 17 17 16 10 23 16 19 4 14 17 12 9 23 16 20 4 2 17 12 16 31 15 0 7 18 11 17 17 19 20 11 23 17 21 1 2 21 0 6 7 21 0 7 21 1 8 0 8 21 25 18 0 2 20 21) #(0 37 43 54 63 70 126 131 134) #(NIL "not a square matrix -- ~s" C-DCOMPLEX C-DOUBLE (VECTOR T) LIST C-INT T 0 1 SQUARE-MATRIX-P ERROR ANY-COMPLEX-ELEMENTS LINPACK-ZGESL LINPACK-DGESL ARRAY-DIMENSION GENERIC-TO-LINALG VECTORP COERCE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((QR-DECOMP SV-DECOMP) EXPORT) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(QR-DECOMP #K(#(77 1 2 1 10 10 0 1 2 3 4 5 6 7 8 9 12 23 11 13 1 1 21 0 2 1 13 23 12 0 2 3 1 23 13 13 1 1 21 0 3 4 13 39 14 14 12 2 14 4 1 5 39 15 14 12 2 14 5 59 2 13 14 23 16 15 2 1 12 23 16 16 2 1 11 23 17 17 5 1 15 16 14 10 38 18 18 23 19 18 3 16 18 14 23 20 19 2 16 16 38 18 20 23 19 19 3 19 20 14 23 20 20 2 15 16 38 18 21 23 19 20 3 20 21 14 21 0 6 7 2 38 18 21 38 21 22 23 19 21 5 16 21 6 22 12 1 8 0 8 21 21 0 9 10 2 38 18 22 23 19 22 3 16 22 14 1 11 0 8 22 21 0 12 13 2 0 11 23 1 14 0 12 23 31 13 0 11 17 12 15 15 16 18 21 22 23 19 20 23 22 22 2 20 9 23 22 23 2 19 9 21 0 15 16 2 61 109 21 24 23 22 24 2 24 7 1 17 0 8 24 21 0 18 19 2 25 20 0 3 22 23 24 25 20 0 2 22 23) #(0 27 33 43 52 59 131 148 151 156 168 171 176 181 184 216 228 231 236 243) #("not a matrix -- ~s" C-DCOMPLEX C-DOUBLE C-INT (VECTOR T) NIL (ARRAY T) T 1 0 #(NIL) MATRIXP ERROR ANY-COMPLEX-ELEMENTS LINPACK-ZQRDC LINPACK-DQRDC ARRAY-DIMENSION GENERIC-TO-LINALG :ELEMENT-TYPE MAKE-ARRAY LIST :INITIAL-ELEMENT COERCE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(SV-DECOMP #K(#(80 2 10 0 1 2 3 4 5 6 7 8 9 14 23 10 12 1 1 21 0 2 1 12 23 11 0 2 2 1 23 12 12 1 1 21 0 3 4 12 39 13 13 12 2 13 3 1 5 39 14 13 12 2 13 4 59 2 12 13 23 15 14 2 1 11 23 15 15 2 1 10 37 76 7 6 15 14 23 11 0 2 5 1 23 16 16 5 1 14 15 13 9 38 17 17 23 18 17 3 15 17 13 38 17 18 23 18 18 3 15 18 13 2 42 14 15 19 38 17 20 23 18 19 3 19 20 13 2 42 15 15 20 38 17 21 23 18 20 3 20 21 13 38 17 21 23 18 21 3 14 21 13 31 12 21 15 16 11 14 14 15 17 18 19 11 14 20 11 15 21 8 23 19 22 2 14 15 23 20 22 3 19 22 9 23 21 23 2 17 7 23 19 24 2 15 15 23 20 24 3 20 24 9 21 0 8 9 21 0 6 25 1 10 0 9 25 25 19 0 4 22 23 24 25) #(0 24 30 40 49 56 78 84 209 214 217) #("not a matrix -- ~s" C-DCOMPLEX C-DOUBLE "more columns than rows - ~s" NIL (VECTOR T) 21 T 1 0 MATRIXP ERROR ANY-COMPLEX-ELEMENTS LINPACK-ZSVDC LINPACK-DSVDC ARRAY-DIMENSION GENERIC-TO-LINALG :ELEMENT-TYPE MAKE-ARRAY LIST LINALG-TO-GENERIC COERCE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(EIGEN EXPORT) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(EIGEN #K(#(80 2 9 0 1 2 3 4 5 6 7 8 10 23 9 11 1 1 21 0 2 1 11 23 10 0 2 2 1 23 11 11 1 1 21 0 3 7 11 23 12 11 2 1 10 23 13 12 1 1 23 14 12 5 12 11 11 9 8 23 15 13 1 1 23 14 13 5 13 11 11 9 8 38 16 14 23 17 14 3 11 14 9 23 18 15 2 11 11 38 16 16 23 17 15 3 15 16 9 23 18 16 2 11 11 38 16 17 23 17 16 3 16 17 9 38 16 17 23 17 17 3 11 17 9 38 16 18 23 17 18 3 11 18 9 2 42 3 11 19 38 16 20 23 17 19 3 19 20 9 23 19 17 11 11 11 12 13 14 7 15 16 17 18 19 23 20 18 2 14 6 23 21 18 1 18 23 22 19 2 15 16 23 20 19 2 19 5 23 23 19 1 19 23 21 19 1 19 21 0 4 5 17 2 45 11 17 20 1 6 0 4 20 25 18 0 3 18 19 20 23 12 11 2 1 10 23 14 12 5 1 11 11 9 8 38 16 13 23 17 13 3 11 13 9 23 18 14 2 11 11 38 16 15 23 17 14 3 14 15 9 38 16 15 23 17 15 3 11 15 9 38 16 16 23 17 16 3 11 16 9 23 24 15 8 11 11 12 13 7 14 15 16 23 20 16 2 13 6 23 21 16 1 16 23 20 17 2 14 5 23 23 17 1 17 23 21 17 1 17 21 0 8 9 15 2 45 11 15 18 1 10 0 4 18 25 18 0 3 16 17 18) #(0 23 29 39 203 210 213 220 325 332 335) #("not a square matrix -- ~s" 2 NIL (ARRAY T) (VECTOR T) 1 T C-DOUBLE 0 SQUARE-MATRIX-P ERROR ANY-COMPLEX-ELEMENTS ARRAY-DIMENSION REALPART GENERIC-TO-LINALG IMAGPART :ELEMENT-TYPE MAKE-ARRAY LIST EISPACK-CH COERCE NREVERSE COMPLEX ROW-LIST EISPACK-RS) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
