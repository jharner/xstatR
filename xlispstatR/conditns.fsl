(XLISP::CHECK-FSL-VERSION 1 4)
#K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 2 1 4 23 4 0 2 2 3 49 5 4 0 57 0) #(0 17 23) #(NIL "can't find package ~s" "XLISP" FIND-PACKAGE ERROR *PACKAGE*) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #("common" REQUIRE) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((ERROR CERROR SIGNAL *BREAK-ON-SIGNALS*) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((CHECK-TYPE ASSERT) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((ETYPECASE CTYPECASE ECASE CCASE) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((HANDLER-CASE IGNORE-ERRORS HANDLER-BIND) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((DEFINE-CONDITION MAKE-CONDITION) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((WITH-SIMPLE-RESTART RESTART-CASE RESTART-BIND) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((COMPUTE-RESTARTS RESTART-NAME FIND-RESTART INVOKE-RESTART INVOKE-RESTART-INTERACTIVELY) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(WARN EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((ABORT CONTINUE MUFFLE-WARNING STORE-VALUE USE-VALUE) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((BREAK INVOKE-DEBUGGER *DEBUGGER-HOOK*) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((CONDITION SIMPLE-CONDITION SERIOUS-CONDITION ERROR SIMPLE-ERROR ARITHMETIC-ERROR DIVISION-BY-ZERO CELL-ERROR UNBOUND-VARIABLE UNDEFINED-FUNCTION CONTROL-ERROR FILE-ERROR PACKAGE-ERROR PROGRAM-ERROR STREAM-ERROR END-OF-FILE TYPE-ERROR SIMPLE-TYPE-ERROR STORAGE-CONDITION WARNING SIMPLE-WARNING SIMPLE-CONDITION-FORMAT-STRING SIMPLE-CONDITION-FORMAT-ARGUMENTS TYPE-ERROR-DATUM TYPE-ERROR-EXPECTED-TYPE PACKAGE-ERROR-PACKAGE STREAM-ERROR-STREAM FILE-ERROR-PATHNAME CELL-ERROR-NAME ARITHMETIC-ERROR-OPERATION ARITHMETIC-ERROR-OPERANDS) EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(RESTART EXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*BREAK-ON-SIGNALS* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *BREAK-ON-SIGNALS* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*BREAK-ON-SIGNALS*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEBUGGER-HOOK* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *DEBUGGER-HOOK* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEBUGGER-HOOK*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*EOF-MARK* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 1 2 4 11 0 1 23 4 4 1 2 25 5 0 2 3 4) #(0 17 20) #(NIL "EOF" *EOF-MARK* BOUNDP GENSYM SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*EOF-MARK*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*NOT-FOUND* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 1 2 4 11 0 1 23 4 4 1 2 25 5 0 2 3 4) #(0 17 20) #(NIL "NOT-FOUND" *NOT-FOUND* BOUNDP GENSYM SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*NOT-FOUND*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEFAULT-HANDLER* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *DEFAULT-HANDLER* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEFAULT-HANDLER*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*ACTIVE-HANDLERS* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *ACTIVE-HANDLERS* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*ACTIVE-HANDLERS*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEFAULT-RESTART* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *DEFAULT-RESTART* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEFAULT-RESTART*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*ACTIVE-RESTARTS* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *ACTIVE-RESTARTS* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*ACTIVE-RESTARTS*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*CONTINUE-RESTARTS* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *CONTINUE-RESTARTS* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*CONTINUE-RESTARTS*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*CONDITION-RESTARTS* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *CONDITION-RESTARTS* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*CONDITION-RESTARTS*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEBUG-LEVEL* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 21 0 1 2 4 11 0 1 25 4 0 2 3 2) #(0 17 20) #(NIL 0 *DEBUG-LEVEL* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEBUG-LEVEL*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEBUG-ENV* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *DEBUG-ENV* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEBUG-ENV*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEBUG-FRAME* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *DEBUG-FRAME* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEBUG-FRAME*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEBUG-PRINT-LENGTH* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *DEBUG-PRINT-LENGTH* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEBUG-PRINT-LENGTH*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #(*DEBUG-PRINT-LEVEL* MARK-AS-SPECIAL) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 25 3 0 2 2 1) #(0 16 19) #(NIL *DEBUG-PRINT-LEVEL* BOUNDP SET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(*DEBUG-PRINT-LEVEL*) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(USE-CONDITIONS #K(#(77 1 1 1 3 3 0 1 2 2 49 4 4 0 38 5 5 23 6 5 2 3 5 23 6 5 1 5 49 7 5 0 38 7 5 49 8 5 0 38 9 5 21 0 1 2 5 38 9 6 23 6 6 3 3 2 6 23 6 5 1 6 1 3 0 3 5 49 10 5 0 21 0 4 5 1 25 11 0 0 11 0 3) #(0 47 64 67 76 80) #(T NIL CONDITION-HOOK #(NIL) *CONDITION-HOOK* *DEFAULT-RESTART* LIST *ACTIVE-RESTARTS* *CONTINUE-RESTARTS* *DEFAULT-HANDLER* *ACTIVE-HANDLERS* TOP-LEVEL) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(UNUSE-CONDITIONS #K(#(80 1 1 0 0 49 1 1 0 25 2 0 0) #(0) #(NIL *CONDITION-HOOK* TOP-LEVEL) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 8 0 1 2 3 4 5 6 7 5 23 8 9 3 8 7 7 23 8 10 3 6 7 7 23 9 11 1 5 23 8 11 3 4 11 7 23 8 12 3 3 7 7 23 8 13 3 2 7 7 23 8 9 5 9 10 11 12 13 25 10 0 3 1 7 9) #(0) #(RESTART REPORT-FUNCTION INTERACTIVE-FUNCTION TEST-FUNCTION #K(#(80 1 0 1 51 1 1 0 11 0 1 80 2 1 0 0 11 0 2) #(0 11) #(T) 0 NIL) FUNCTION NIL NAME LIST BYTE-CODE-CLOSE INSTALL-STRUCTURE-SLOTS) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-NAME #K(#(80 2 1 0 0 25 1 0 2 1 2) #(0) #(1 %STRUCT-REF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 1 0 4 51 5 2 0 23 1 2 1 2 38 2 3 23 3 3 2 1 3 21 0 1 2 3 19 3 2 0 1 3 20 1 2 4 38 2 5 20 4 5 4 49 2 4 0 11 0 1 80 2 2 4 5 0 25 6 0 3 3 1 2 80 3 0 2 17 1 3 51 4 4 0 25 7 0 2 4 3) #(0 28 34 49 52 65) #(RESTART-NAME COERCE-TO-MACRO *CMP-GLOBAL-MACROS* ASSOC 1 %STRUCT-REF LIST APPLY) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-NAME) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 25 4 0 3 2 1 4) #(0) #(*SETF-LAMBDA* RESTART-NAME #K(#(77 2 1 0 0 1 51 1 2 0 25 0 0 2 2 1 80 3 2 1 2 0 25 3 0 4 4 2 3 1) #(0 16) #(APPLY-ARG-ROTATE 1 %STRUCT-SET LIST) 0 NIL) BYTE-CODE-CLOSE %SET-GET) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(*SETF* RESTART-NAME REMPROP) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-NAME) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-FUNCTION #K(#(80 2 1 0 0 25 1 0 2 1 2) #(0) #(2 %STRUCT-REF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 1 0 4 51 5 2 0 23 1 2 1 2 38 2 3 23 3 3 2 1 3 21 0 1 2 3 19 3 2 0 1 3 20 1 2 4 38 2 5 20 4 5 4 49 2 4 0 11 0 1 80 2 2 4 5 0 25 6 0 3 3 1 2 80 3 0 2 17 1 3 51 4 4 0 25 7 0 2 4 3) #(0 28 34 49 52 65) #(RESTART-FUNCTION COERCE-TO-MACRO *CMP-GLOBAL-MACROS* ASSOC 2 %STRUCT-REF LIST APPLY) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-FUNCTION) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 25 4 0 3 2 1 4) #(0) #(*SETF-LAMBDA* RESTART-FUNCTION #K(#(77 2 1 0 0 1 51 1 2 0 25 0 0 2 2 1 80 3 2 1 2 0 25 3 0 4 4 2 3 1) #(0 16) #(APPLY-ARG-ROTATE 2 %STRUCT-SET LIST) 0 NIL) BYTE-CODE-CLOSE %SET-GET) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(*SETF* RESTART-FUNCTION REMPROP) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-FUNCTION) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-TEST-FUNCTION #K(#(80 2 1 0 0 25 1 0 2 1 2) #(0) #(3 %STRUCT-REF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 1 0 4 51 5 2 0 23 1 2 1 2 38 2 3 23 3 3 2 1 3 21 0 1 2 3 19 3 2 0 1 3 20 1 2 4 38 2 5 20 4 5 4 49 2 4 0 11 0 1 80 2 2 4 5 0 25 6 0 3 3 1 2 80 3 0 2 17 1 3 51 4 4 0 25 7 0 2 4 3) #(0 28 34 49 52 65) #(RESTART-TEST-FUNCTION COERCE-TO-MACRO *CMP-GLOBAL-MACROS* ASSOC 3 %STRUCT-REF LIST APPLY) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-TEST-FUNCTION) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 25 4 0 3 2 1 4) #(0) #(*SETF-LAMBDA* RESTART-TEST-FUNCTION #K(#(77 2 1 0 0 1 51 1 2 0 25 0 0 2 2 1 80 3 2 1 2 0 25 3 0 4 4 2 3 1) #(0 16) #(APPLY-ARG-ROTATE 3 %STRUCT-SET LIST) 0 NIL) BYTE-CODE-CLOSE %SET-GET) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(*SETF* RESTART-TEST-FUNCTION REMPROP) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-TEST-FUNCTION) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-INTERACTIVE-FUNCTION #K(#(80 2 1 0 0 25 1 0 2 1 2) #(0) #(4 %STRUCT-REF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 1 0 4 51 5 2 0 23 1 2 1 2 38 2 3 23 3 3 2 1 3 21 0 1 2 3 19 3 2 0 1 3 20 1 2 4 38 2 5 20 4 5 4 49 2 4 0 11 0 1 80 2 2 4 5 0 25 6 0 3 3 1 2 80 3 0 2 17 1 3 51 4 4 0 25 7 0 2 4 3) #(0 28 34 49 52 65) #(RESTART-INTERACTIVE-FUNCTION COERCE-TO-MACRO *CMP-GLOBAL-MACROS* ASSOC 4 %STRUCT-REF LIST APPLY) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-INTERACTIVE-FUNCTION) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 25 4 0 3 2 1 4) #(0) #(*SETF-LAMBDA* RESTART-INTERACTIVE-FUNCTION #K(#(77 2 1 0 0 1 51 1 2 0 25 0 0 2 2 1 80 3 2 1 2 0 25 3 0 4 4 2 3 1) #(0 16) #(APPLY-ARG-ROTATE 4 %STRUCT-SET LIST) 0 NIL) BYTE-CODE-CLOSE %SET-GET) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(*SETF* RESTART-INTERACTIVE-FUNCTION REMPROP) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-INTERACTIVE-FUNCTION) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-REPORT-FUNCTION #K(#(80 2 1 0 0 25 1 0 2 1 2) #(0) #(5 %STRUCT-REF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 1 0 4 51 5 2 0 23 1 2 1 2 38 2 3 23 3 3 2 1 3 21 0 1 2 3 19 3 2 0 1 3 20 1 2 4 38 2 5 20 4 5 4 49 2 4 0 11 0 1 80 2 2 4 5 0 25 6 0 3 3 1 2 80 3 0 2 17 1 3 51 4 4 0 25 7 0 2 4 3) #(0 28 34 49 52 65) #(RESTART-REPORT-FUNCTION COERCE-TO-MACRO *CMP-GLOBAL-MACROS* ASSOC 5 %STRUCT-REF LIST APPLY) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-REPORT-FUNCTION) 0 NIL) #K(#(80 1 3 0 1 2 1 23 3 4 1 3 25 4 0 3 2 1 4) #(0) #(*SETF-LAMBDA* RESTART-REPORT-FUNCTION #K(#(77 2 1 0 0 1 51 1 2 0 25 0 0 2 2 1 80 3 2 1 2 0 25 3 0 4 4 2 3 1) #(0 16) #(APPLY-ARG-ROTATE 5 %STRUCT-SET LIST) 0 NIL) BYTE-CODE-CLOSE %SET-GET) 0 NIL) #K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #(*SETF* RESTART-REPORT-FUNCTION REMPROP) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-REPORT-FUNCTION) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(COPY-RESTART #K(#(80 2 0 0 25 0 0 1 1) #(0) #(%COPY-STRUCT) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-P #K(#(80 2 1 0 0 25 1 0 2 2 1) #(0) #(RESTART %STRUCT-TYPE-P) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 1 0 4 51 5 2 0 23 1 2 1 2 38 2 3 23 3 3 2 1 3 21 0 1 2 3 19 3 2 0 1 3 20 1 2 4 38 2 5 20 4 5 4 49 2 4 0 11 0 1 80 2 2 4 5 0 25 6 0 3 3 2 1 80 3 0 2 17 1 3 51 4 4 0 25 7 0 2 4 3) #(0 28 34 49 52 65) #(RESTART-P COERCE-TO-MACRO *CMP-GLOBAL-MACROS* ASSOC (QUOTE RESTART) %STRUCT-TYPE-P LIST APPLY) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART-P) 0 NIL) #K(#(80 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #(PRINT-RESTART *STRUCT-PRINT-FUNCTION* RESTART %SET-GET) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-RESTART #K(#(77 3 1 0 0 0 7 6 6 0 1 2 3 4 5 5 21 2 1 2 1 0 1 12 1 3 23 8 12 2 11 6 21 2 4 5 2 0 2 13 1 6 23 8 13 2 11 7 21 2 7 8 3 0 3 14 1 9 23 8 14 2 11 8 21 2 10 11 4 0 4 15 1 12 23 8 15 2 11 9 21 2 13 14 5 0 5 16 1 15 23 8 16 2 11 10 25 9 0 6 11 12 13 14 15 16) #(0 21 26 32 37 42 48 53 58 64 69 74 80 85 90 96) #(NAME FUNCTION TEST-FUNCTION INTERACTIVE-FUNCTION REPORT-FUNCTION RESTART (%NOT-SUPPLIED %NOT-SUPPLIED %NOT-SUPPLIED %NOT-SUPPLIED %NOT-SUPPLIED) (:NAME :FUNCTION :TEST-FUNCTION :INTERACTIVE-FUNCTION :REPORT-FUNCTION) DEFAULT-STRUCTURE-SLOT-VALUE %MAKE-STRUCT) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL) #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART #K(#(77 3 1 0 0 0 7 6 6 0 1 2 3 4 5 5 21 2 1 2 1 0 1 12 1 3 23 8 12 2 11 6 21 2 4 5 2 0 2 13 1 6 23 8 13 2 11 7 21 2 7 8 3 0 3 14 1 9 23 8 14 2 11 8 21 2 10 11 4 0 4 15 1 12 23 8 15 2 11 9 21 2 13 14 5 0 5 16 1 15 23 8 16 2 11 10 25 9 0 6 11 12 13 14 15 16) #(0 21 26 32 37 42 48 53 58 64 69 74 80 85 90 96) #(NAME FUNCTION TEST-FUNCTION INTERACTIVE-FUNCTION REPORT-FUNCTION RESTART (%NOT-SUPPLIED %NOT-SUPPLIED %NOT-SUPPLIED %NOT-SUPPLIED %NOT-SUPPLIED) (:NAME :FUNCTION :TEST-FUNCTION :INTERACTIVE-FUNCTION :REPORT-FUNCTION) DEFAULT-STRUCTURE-SLOT-VALUE %MAKE-STRUCT) 0 NIL) BYTE-CODE-CLOSE INSTALL-SHARP-S-CONSTRUCTOR) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(RESTART) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PRINT-RESTART #K(#(80 4 5 0 1 2 3 4 2 38 5 9 21 0 1 2 9 23 6 9 2 1 7 23 7 10 1 1 25 8 0 4 2 4 9 10 23 6 9 2 1 8 21 0 3 4 9 33 9 0 1 2 23 6 9 2 1 7 21 0 5 6 9 25 8 0 3 2 5 9 25 9 0 2 6 1) #(0 17 36 47 52 63 70) #("#<Restart ~a: ~d>" "~a." "can't print restart ~s without escapes" 1 5 *PRINT-ESCAPE* %STRUCT-REF ADDRESS-OF FORMAT ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 7 38 1 2 38 2 3 38 3 4 38 4 5 51 3 6 0 51 2 7 0 51 1 8 0 23 5 2 8 2 1 3 8 4 7 5 6 49 6 2 0 57 0 77 2 1 0 1 7 0 25 8 0 1 2 80 2 1 9 0 11 0 2 80 2 1 10 0 25 11 0 2 1 2) #(0 47 59 67) #(ABORT :NAME :FUNCTION :TEST-FUNCTION :REPORT-FUNCTION MAKE-RESTART *DEFAULT-RESTART* NIL TOP-LEVEL T "Return to Lisp Toplevel." FORMAT) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PUSH-RESTARTS #K(#(80 3 1 0 4 23 1 4 1 2 16 4 5 21 1 1 2 4 23 2 6 2 1 5 38 3 7 20 6 7 6 49 3 6 0 17 4 4 16 4 5 21 1 1 2 4 11 0 3) #(0 18 46) #(NIL REVERSE LIST *ACTIVE-RESTARTS*) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(EXPAND-RESTART-BINDING-FORM #K(#(80 2 7 0 1 2 3 4 5 6 8 16 1 9 71 2 2 1 10 71 2 0 1 11 21 0 2 1 10 23 7 0 2 2 1 21 0 5 3 9 38 8 12 23 9 12 2 11 12 21 0 5 4 12 23 7 0 2 3 1 23 10 12 1 8 23 10 13 1 7 23 10 14 1 6 23 10 15 1 9 23 11 14 2 14 15 23 10 14 1 14 23 10 15 1 5 23 10 16 1 10 25 11 0 6 12 13 14 15 16 11) #(0 29 35 40 54 60) #("restart form missing function - ~s" "anonymous restart needs a report function - ~s" NIL :FUNCTION QUOTE :NAME MAKE-RESTART ERROR :REPORT-FUNCTION GETF LIST APPEND) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-RESTART-CASE-PARTS #K(#(80 4 1 0 5 51 2 5 0 23 1 5 2 5 3 34 4 6 34 4 7 51 1 8 4 1 7 6 2 23 2 0 3 8 3 5 35 6 8 23 3 8 1 8 35 7 9 23 3 9 1 9 20 8 9 0 57 0 80 7 8 4 5 6 7 8 9 10 11 7 16 5 15 23 12 15 1 15 23 12 16 1 14 23 12 17 1 13 23 12 18 1 12 23 12 19 1 11 23 13 18 2 18 19 23 12 18 1 18 23 12 19 1 10 23 12 20 1 4 23 12 21 1 11 23 13 19 3 19 20 21 23 12 19 1 19 23 12 20 1 9 23 12 21 1 6 23 13 20 2 20 21 23 12 20 1 20 23 13 17 4 17 18 19 20 23 12 17 1 17 23 13 16 2 16 17 23 12 16 1 16 23 14 17 1 5 23 13 15 3 15 16 17 35 3 16 20 15 16 15 36 3 15 0 35 2 15 20 6 15 15 36 2 15 0 23 12 15 1 8 23 12 16 1 1 23 12 17 1 7 23 12 18 1 14 23 12 19 1 13 71 2 2 5 20 23 12 20 1 20 23 15 21 1 5 23 13 19 3 19 20 21 23 12 19 1 19 23 13 18 2 18 19 23 12 18 1 18 23 12 19 1 4 23 13 17 3 17 18 19 23 12 17 1 17 23 13 15 3 15 16 17 35 2 16 20 15 16 15 36 2 15 0 57 0 80 2 1 16 0 25 17 0 1 2) #(0 58 315) #(NIL MAPCAR MAPC NREVERSE APPLY RETURN-FROM GO SETQ TEMP &REST LAMBDA FUNCTION LIST APPEND TRANSFORM-RESTART-CASE-OPTIONS RESTART-CASE-CASE-BODY "GO" GENSYM) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(TRANSFORM-RESTART-CASE-OPTIONS #K(#(80 2 7 0 1 2 3 4 5 6 11 0 1 9 0 8 10 71 2 0 9 9 16 9 11 60 11 7 5 4 3 2 25 7 0 1 10 38 8 12 20 12 10 10 23 9 12 1 6 71 2 2 9 13 23 9 13 1 13 23 10 12 2 12 13 20 12 10 10 1 1 38 11 12 20 12 10 10 23 9 12 1 6 71 2 2 9 13 23 9 13 1 13 23 10 12 2 12 13 20 12 10 10 1 1 38 12 12 20 12 10 10 71 2 2 9 12 23 13 12 1 12 21 0 6 7 12 23 9 13 1 6 23 9 14 1 5 23 9 15 1 4 23 10 15 1 15 23 9 15 1 15 23 9 16 1 3 23 9 17 1 4 23 9 18 1 2 71 2 2 9 19 23 9 19 1 19 23 10 16 4 16 17 18 19 23 9 16 1 16 23 10 14 3 14 15 16 23 9 14 1 14 23 10 12 2 13 14 1 8 23 9 13 1 6 71 2 2 9 14 23 9 14 1 14 23 10 12 2 13 14 20 12 10 10 1 1) #(0 17 32 37 71 105 127 210 231) #("~a" FORMAT S LAMBDA FUNCTION #(:REPORT :TEST :INTERACTIVE) NIL NREVERSE :INTERACTIVE-FUNCTION LIST APPEND :TEST-FUNCTION :REPORT-FUNCTION STRINGP) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-CASE-CASE-BODY #K(#(80 2 1 0 2 0 1 3 71 2 0 3 3 16 3 4 23 1 4 2 4 2 21 0 1 2 4 11 0 3) #(0 8 27) #((:REPORT :TEST :INTERACTIVE) MEMBER) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CONDITION-RESTARTS #K(#(80 3 2 0 1 4 21 1 1 2 1 16 1 5 23 2 5 2 5 3 1 3 0 4 5 21 0 4 5 5 39 3 5 38 4 6 38 4 7 23 5 7 1 7 23 5 8 1 2 2 45 7 8 7 23 6 6 2 6 7 25 7 0 2 5 6 11 0 4) #(0 11 22 25 30 66) #((ERROR CERROR SIGNAL WARN) NIL MEMBER SECOND *ACTIVE-RESTARTS* LENGTH BUTLAST MAPCAR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #(NIL *STRUCT-SLOTS* CONDITION %SET-GET) 0 NIL)
#K(#(80 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #(PRINT-CONDITION *STRUCT-PRINT-FUNCTION* CONDITION %SET-GET) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(TRANSFORM-CONDITION-REPORT-OPTION #K(#(80 2 2 0 1 2 21 0 1 4 1 23 2 4 1 1 21 0 2 3 4 11 0 1 23 3 4 1 2 23 3 5 1 1 25 4 0 2 4 5 11 0 3) #(0 11 21 24 40) #(FUNCTION NIL STRINGP LIST APPEND) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PLIST-TO-ALIST #K(#(80 2 1 0 5 0 2 3 0 1 4 17 4 5 21 1 1 2 5 71 2 0 4 5 16 4 6 71 2 2 4 7 23 1 6 2 6 7 20 6 3 3 0 3 6 0 5 4 0 6 3 17 4 5 21 1 1 2 5 25 2 0 1 3) #(0 19 59) #(NIL LIST NREVERSE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(TRANSFORM-CONDITION-SLOT-OPTIONS #K(#(80 2 9 0 0 1 2 3 4 5 6 7 16 21 1 1 2 1 16 1 11 1 3 0 1 11 21 1 4 5 1 17 1 12 23 8 12 1 12 1 6 0 2 12 38 4 13 23 9 13 2 13 12 21 0 7 11 13 71 2 2 13 13 23 5 14 1 9 23 5 15 1 10 23 5 16 1 11 23 10 15 2 15 16 23 5 15 1 15 23 5 16 1 9 23 11 17 1 13 21 0 8 9 17 23 5 18 1 10 23 5 19 1 7 23 5 20 1 13 23 10 19 2 19 20 23 5 19 1 19 23 10 17 2 18 19 1 10 23 5 18 1 8 23 5 19 1 7 23 5 20 1 8 23 5 21 1 10 23 5 22 1 6 23 10 21 2 21 22 23 5 21 1 21 23 5 22 1 8 23 5 23 1 5 23 5 24 1 4 23 5 25 1 3 23 5 26 1 13 23 10 24 3 24 25 26 23 5 24 1 24 23 10 23 2 23 24 23 5 23 1 23 23 10 22 2 22 23 23 5 22 1 22 23 10 20 3 20 21 22 23 5 20 1 20 23 10 17 3 18 19 20 23 5 17 1 17 23 5 18 1 10 51 12 19 0 23 12 19 2 19 12 23 5 19 1 19 23 10 18 2 18 19 23 5 18 1 18 23 10 16 3 16 17 18 23 5 16 1 16 25 10 0 3 14 15 16 23 5 13 1 10 23 5 14 1 11 23 10 14 2 14 12 23 5 14 1 14 25 10 0 2 13 14 80 2 0 2 16 1 2 38 4 3 40 2 3 0 57 0) #(0 18 23 26 31 41 44 58 104 138 252 307 334) #(NIL LAMBDA FUNCTION EVAL :INITFORM LIST CONS QUOTE PLIST-TO-ALIST ASSOC APPEND CONSTANTP REMOVE-IF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PRINT-CONDITION #K(#(80 4 3 0 1 2 3 23 3 7 1 1 38 4 8 21 0 1 2 8 23 3 7 1 1 23 5 8 1 1 25 6 0 4 2 4 7 8 46 7 6 8 21 0 3 6 8 23 7 9 1 8 21 0 4 5 9 25 6 0 3 2 5 8 33 8 0 2 1 2 25 6 0 3 2 5 7) #(0 20 38 47 57 64 70) #("#<Condition ~s: ~d>" "~s" *CONDITION-REPORT* TYPE-OF *PRINT-ESCAPE* ADDRESS-OF FORMAT STRINGP) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-CONDITION-CLASS #K(#(80 6 22 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 21 23 22 0 3 1 27 26 21 0 1 2 2 23 22 0 3 1 6 2 21 0 3 4 3 0 3 28 1 5 46 2 25 28 23 22 0 3 1 25 28 23 23 28 1 4 21 0 6 12 28 60 12 11 11 10 9 8 7 1 12 23 22 0 3 1 10 4 1 12 23 22 0 3 1 9 4 1 12 23 22 0 3 1 8 4 1 12 23 22 0 3 1 7 4 21 0 13 14 2 39 24 28 46 2 23 29 23 25 28 2 28 29 1 15 0 24 28 0 24 29 0 5 30 16 30 31 21 1 16 19 30 16 31 32 23 26 32 2 32 28 21 0 18 17 32 16 31 33 23 27 33 3 33 24 24 20 33 29 29 17 30 30 16 30 31 21 1 16 19 30 23 28 32 1 29 23 29 32 2 28 32 0 5 33 16 33 34 21 1 20 30 33 16 34 35 23 26 35 2 35 32 17 34 36 23 30 37 2 35 32 2 43 37 22 37 0 36 38 16 38 39 21 1 21 29 38 16 39 40 60 40 21 27 26 25 24 23 22 1 28 71 2 2 39 41 47 20 35 41 0 1 28 71 2 2 39 41 71 2 2 35 42 20 41 42 41 47 22 35 41 0 1 28 71 2 2 39 41 23 27 42 1 19 23 27 43 1 18 23 27 44 1 17 23 29 44 1 44 23 27 44 1 44 23 27 45 1 16 23 27 46 1 17 23 27 47 1 37 23 29 45 3 45 46 47 23 27 45 1 45 23 29 43 3 43 44 45 23 27 43 1 43 23 29 42 2 42 43 23 31 42 1 42 23 32 0 2 41 42 71 2 2 39 41 23 27 42 1 19 23 27 43 1 18 23 27 44 1 17 23 27 45 1 15 23 29 44 2 44 45 23 27 44 1 44 23 27 45 1 14 23 27 46 1 17 23 27 47 1 37 23 27 48 1 15 23 29 45 4 45 46 47 48 23 27 45 1 45 23 29 43 3 43 44 45 23 27 43 1 43 23 29 42 2 42 43 23 31 42 1 42 23 22 0 3 41 13 42 1 28 71 2 2 39 41 23 27 42 1 19 23 27 43 1 18 23 27 44 1 17 23 27 45 1 15 23 29 44 2 44 45 23 27 44 1 44 23 27 45 1 14 23 27 46 1 17 23 27 47 1 37 23 27 48 1 15 23 29 45 4 45 46 47 48 23 27 45 1 45 23 29 43 3 43 44 45 23 27 43 1 43 23 29 42 2 42 43 23 31 42 1 42 23 32 0 2 41 42 1 28 71 2 2 39 41 23 27 42 1 19 23 27 43 1 18 23 27 44 1 17 23 29 44 1 44 23 27 44 1 44 23 27 45 1 16 23 27 46 1 17 23 27 47 1 37 23 29 45 3 45 46 47 23 27 45 1 45 23 29 43 3 43 44 45 23 27 43 1 43 23 29 42 2 42 43 23 31 42 1 42 23 32 0 2 41 42 17 38 38 16 38 39 21 1 21 29 38 17 33 33 16 33 34 21 1 20 30 33 23 22 0 3 1 23 32 11 0 1) #(0 38 45 50 55 59 76 84 86 95 104 113 120 125 140 143 157 171 185 196 218 252 264 266 278 299 486 586 672 683 694) #(*STRUCT-INCLUDE* FUNCTION-DOCUMENTATION VARIABLE-DOCUMENTATION TYPE-DOCUMENTATION SETF-DOCUMENTATION #(FUNCTION VARIABLE TYPE SETF) TYPE *SETF* %STRUCT-SET V %STRUCT-REF X LAMBDA FUNCTION 2 #(:READER :WRITER :ACCESSOR :INITARG :INITFORM) 1 *STRUCT-SLOTS* NIL *CONDITION-REPORT* PRINT-CONDITION *STRUCT-PRINT-FUNCTION* %SET-GET STRINGP COPY-LIST MAPCAR ASSOC LIST NREVERSE APPEND POSITION EVAL %SET-SYMBOL-FUNCTION) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INITIALIZE-CONDITION #K(#(80 4 2 0 1 9 0 5 6 0 2 7 16 7 8 21 0 1 9 7 71 2 2 8 9 38 2 10 71 3 4 8 11 0 9 12 16 12 13 21 1 2 4 12 38 2 14 23 3 10 3 3 13 14 38 2 14 50 0 3 4 10 14 17 12 12 16 12 13 21 1 2 4 12 0 10 12 38 2 13 50 0 5 8 12 13 23 4 14 1 11 21 0 6 7 14 0 11 10 1 8 23 5 10 1 11 23 6 0 3 1 6 10 2 43 6 5 6 17 7 7 16 7 8 21 0 1 9 7 11 0 4) #(0 20 44 63 74 86 96 101 106 129) #(NIL 1 *NOT-FOUND* GETF CONSTANTP EVAL %STRUCT-SET) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(REVERSE-EXPAND-HANDLER-BIND-FORMS #K(#(80 2 3 0 1 2 6 0 4 5 0 1 6 16 6 7 21 1 1 2 6 23 1 8 1 3 23 1 9 1 2 16 7 10 23 1 10 1 10 23 3 9 2 9 10 23 1 9 1 9 71 2 2 7 10 23 1 10 1 10 23 3 8 3 8 9 10 20 8 5 5 17 6 6 16 6 7 21 1 1 2 6 11 0 5) #(0 21 82) #(QUOTE LIST NIL APPEND) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PUSH-CONDITION-HANDLERS #K(#(80 3 1 0 4 0 1 4 16 4 5 21 1 1 2 4 20 2 5 6 38 1 7 20 6 7 6 49 1 6 0 17 4 4 16 4 5 21 1 1 2 4 11 0 3) #(0 16 42) #(NIL *ACTIVE-HANDLERS*) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(HANDLER-CASE-HANDLER-BIND-FORMS #K(#(80 4 0 1 51 1 4 1 2 25 0 0 3 4 1 3 80 4 5 1 2 3 4 5 7 16 2 9 23 6 9 1 9 23 6 10 1 8 23 6 11 1 7 23 6 12 1 6 23 7 12 1 12 23 6 12 1 12 23 6 13 1 5 23 6 14 1 1 23 6 15 1 6 23 7 13 3 13 14 15 23 6 13 1 13 23 6 14 1 4 23 6 15 1 3 23 7 14 2 14 15 23 6 14 1 14 23 7 11 4 11 12 13 14 23 6 11 1 11 23 7 10 2 10 11 23 6 10 1 10 25 7 0 2 9 10) #(0 16) #(MAPCAR GO SETQ TEMP LAMBDA FUNCTION LIST APPEND) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(EXPAND-HANDLER-CASE-BODIES #K(#(80 5 0 2 39 0 5 51 1 6 2 3 2 23 1 6 3 6 1 4 25 2 0 2 5 6 80 5 2 3 4 7 71 2 2 3 7 21 0 2 3 7 71 2 2 3 8 16 8 7 1 4 0 1 7 23 5 8 1 4 23 5 9 1 6 23 5 10 1 2 23 5 11 1 5 23 5 12 1 7 23 5 13 1 1 23 6 12 2 12 13 23 5 12 1 12 23 6 12 1 12 23 5 12 1 12 71 2 0 3 13 23 6 11 3 11 12 13 23 5 11 1 11 23 6 9 3 9 10 11 23 5 9 1 9 25 6 0 2 8 9) #(0 26 42 52 55) #(NCONC MAPCAR APPLY LET RETURN-FROM LIST APPEND) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(HANDLE-CONDITION #K(#(80 2 10 0 1 2 3 4 5 6 7 8 9 13 38 10 12 23 11 12 2 1 12 21 0 1 5 12 52 8 2 13 14 1 5 34 11 15 54 3 16 17 0 57 13 38 12 18 69 7 9 49 12 18 0 38 13 20 38 14 21 38 15 22 51 13 23 0 51 12 24 2 17 15 23 16 20 6 20 6 21 24 22 23 23 17 20 1 20 23 18 0 2 11 20 23 19 20 2 5 4 69 3 9 49 20 20 0 38 21 22 23 22 0 2 22 2 23 23 0 1 1 53 14 35 15 18 51 14 19 0 23 24 0 2 19 18 53 14 38 25 12 16 12 13 21 1 6 11 12 16 13 14 69 10 9 1 8 70 17 12 12 16 12 13 21 1 6 11 12 49 25 14 0 71 2 2 13 16 71 3 4 13 17 23 11 18 2 1 16 21 0 9 10 18 31 17 0 1 1 1 7 10 11 1 7 11 0 11 77 2 3 0 0 0 36 2 3 0 55 1 4 80 2 1 26 0 25 22 0 2 1 2 80 1 2 7 9 0 13 0 2 2 1) #(0 28 35 45 124 139 150 158 170 195 202 206 209 222 233) #(#0="~&Break on signal: " (*CONDITION-RESTARTS*) ((CONTINUE NIL :REPORT (LAMBDA (STREAM) (FORMAT STREAM #1="Proceed with signalling.")) (VALUES NIL T))) (PROGN (FORMAT *DEBUG-IO* #0#) (DO-DEBUGGER C)) CONTINUE (*ACTIVE-RESTARTS*) #:TAG4469 T (*ACTIVE-HANDLERS*) NIL *BREAK-ON-SIGNALS* TYPEP *ACTIVE-RESTARTS* :NAME :FUNCTION :REPORT-FUNCTION MAKE-RESTART LIST PUSH-RESTARTS CONDITION-RESTARTS *CONDITION-RESTARTS* *DEBUG-IO* FORMAT DO-DEBUGGER APPLY *ACTIVE-HANDLERS* #1#) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CONDITION-ARGUMENT #K(#(77 1 3 2 1 1 0 2 23 2 6 2 1 4 21 0 1 2 6 11 0 1 23 3 6 1 1 21 0 3 4 6 39 4 6 25 5 0 3 6 1 2 23 6 6 1 1 21 0 5 6 6 38 7 6 38 8 7 25 4 0 5 3 6 1 7 2 20 1 2 6 25 9 0 2 5 6) #(0 19 22 32 42 52 67) #("bad condition arguments - ~s" #(SIMPLE-ERROR CONDITION) TYPEP SYMBOLP MAKE-CONDITION APPLY STRINGP :FORMAT-STRING :FORMAT-ARGUMENTS ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(BASE-CONDITION-HOOK #K(#(77 2 4 0 6 0 1 2 3 4 5 3 69 10 9 1 2 70 57 0 49 6 2 0 49 7 3 0 69 8 9 1 4 70 1 1 49 8 7 0 60 1 6 11 10 9 8 7 6 5 10 5 1 3 39 9 13 23 10 0 2 13 4 1 3 39 11 13 23 10 0 2 13 4 1 3 39 12 13 23 10 0 2 13 4 1 3 39 13 13 23 10 0 2 13 4 1 3 39 14 13 23 10 0 2 13 4 1 3 39 15 13 23 10 0 2 13 4 1 3) #(0 17 20 33 36 50 54 65 76 87 98 109) #(NIL #(ERROR CERROR SIGNAL WARN BREAK DEBUG) CONDITION-HOOK (*CONDITION-HOOK*) T (*DEBUG-ENV* *DEBUG-FRAME*) *DEBUG-FRAME* *DEBUG-ENV* *CONDITION-HOOK* DO-DEBUGGER APPLY DO-BREAK DO-WARN DO-SIGNAL DO-CERROR DO-ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CONDITION-HOOK #K(#(77 2 1 0 8 0 1 2 3 4 5 1 6 6 69 9 8 1 2 70 57 0 49 7 7 0 38 8 11 69 6 8 1 4 70 1 1 49 8 11 0 51 9 13 0 23 9 13 2 5 13 51 8 14 0 23 9 14 2 4 14 23 9 13 2 13 14 38 8 14 23 10 0 2 13 14 72 7 13 3 58 13 21 0 5 6 13 16 13 13 14 13 1 3 23 11 0 1 2 1 3 39 9 14 39 12 15 23 13 0 2 15 1 32 14 13 80 2 0 1 23 14 2 1 1 25 15 0 1 2 80 2 0 1 23 14 2 1 1 25 16 0 1 2) #(0 19 22 34 37 87 94 101 116 130) #("stack overflow" T UNBOUND-VARIABLE UNDEFINED-FUNCTION (*ACTIVE-HANDLERS*) CONDITION-HOOK (*CONDITION-HOOK*) *CONDITION-HOOK* *ACTIVE-HANDLERS* LIST PUSH-CONDITION-HANDLERS ERROR BASE-CONDITION-HOOK APPLY CELL-ERROR-NAME AUTOLOAD-VARIABLE AUTOLOAD-FUNCTION) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DO-ERROR #K(#(77 2 2 0 4 0 1 2 3 4 23 4 7 2 1 2 38 5 8 69 6 5 1 2 70 57 0 49 5 8 0 38 6 10 23 7 0 2 7 10 49 6 4 0 23 8 0 1 7 38 9 10 23 10 0 2 10 3 23 11 0 1 7 1 1) #(0 24 27) #("~&Error: " NIL T (*ACTIVE-RESTARTS*) CONDITION-ARGUMENT *ACTIVE-RESTARTS* *CONDITION-RESTARTS* PUSH-RESTARTS HANDLE-CONDITION *DEBUG-IO* FORMAT DO-DEBUGGER) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DO-CERROR #K(#(77 2 3 0 9 0 1 2 3 4 5 6 7 8 17 23 9 13 2 2 3 38 10 14 69 12 11 1 2 70 11 0 10 49 10 14 0 38 11 16 23 12 0 2 13 16 49 11 10 0 52 9 3 16 17 1 1 34 10 18 54 4 19 20 0 57 16 38 10 21 69 12 11 49 10 21 0 38 13 23 38 14 24 38 15 25 38 16 26 51 8 27 1 13 51 7 28 2 3 1 51 6 29 2 20 18 23 17 23 8 23 8 24 29 25 28 26 27 23 18 23 1 23 23 12 0 2 10 23 23 19 23 2 7 6 69 5 11 49 11 23 0 23 20 0 1 13 38 21 25 23 22 0 2 25 4 23 23 0 1 13 53 17 35 18 21 51 9 22 0 23 24 0 2 22 21 53 17 77 2 3 0 0 0 36 2 3 0 55 1 5 80 4 0 1 39 22 4 25 24 0 4 4 3 2 1 80 3 0 0 40 2 1 0 57 0 80 1 1 6 0 11 0 1) #(0 29 33 57 67 163 178 191 206 216) #(#0="~&Error: " (*CONDITION-RESTARTS*) ((CONTINUE NIL :REPORT (LAMBDA (S) (APPLY (FUNCTION FORMAT) S CMSG ARGS)) :TEST (LAMBDA (C) (EQ C CONDITION)))) (PROGN (HANDLE-CONDITION CONDITION) (FORMAT *DEBUG-IO* #0#) (DO-DEBUGGER CONDITION)) CONTINUE #:TAG5011 NIL T (*ACTIVE-RESTARTS*) CONDITION-ARGUMENT *ACTIVE-RESTARTS* *CONDITION-RESTARTS* PUSH-RESTARTS :NAME :FUNCTION :REPORT-FUNCTION :TEST-FUNCTION MAKE-RESTART LIST CONDITION-RESTARTS HANDLE-CONDITION *DEBUG-IO* FORMAT DO-DEBUGGER APPLY) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DO-SIGNAL #K(#(77 2 2 0 4 0 1 2 3 4 23 4 7 3 1 2 6 38 5 8 69 5 4 1 2 70 11 0 3 49 5 8 0 38 6 10 23 7 0 2 7 10 49 6 3 0 23 8 0 1 7 1 1) #(0 25 29) #(NIL T (*ACTIVE-RESTARTS*) SIMPLE-CONDITION CONDITION-ARGUMENT *ACTIVE-RESTARTS* *CONDITION-RESTARTS* PUSH-RESTARTS HANDLE-CONDITION) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DO-WARN #K(#(77 2 2 0 11 0 1 2 3 4 5 6 7 8 9 10 17 23 11 14 4 1 2 13 12 38 12 15 69 11 10 1 2 70 11 0 9 49 12 15 0 38 13 17 23 14 0 2 14 17 49 13 9 0 52 8 3 17 18 1 1 34 9 19 54 4 20 21 0 57 17 38 12 22 69 11 10 49 12 22 0 38 15 24 38 16 25 38 17 26 38 18 27 51 8 28 1 14 51 7 29 0 51 6 30 2 21 19 23 19 24 8 24 7 25 30 26 29 27 28 23 20 24 1 24 23 14 0 2 9 24 23 21 24 2 6 5 69 4 10 49 13 24 0 23 22 0 1 14 38 23 26 23 24 0 3 26 3 14 53 18 35 19 22 51 9 23 0 23 25 0 2 23 22 53 18 77 2 3 0 0 0 36 2 3 0 55 1 5 80 2 2 26 27 0 25 24 0 3 1 3 2 80 3 0 0 40 2 1 0 57 0 80 1 1 6 0 11 0 1) #(0 33 37 61 71 161 176 189 202 212) #(#0="~&Warning: ~a~%" (*CONDITION-RESTARTS*) ((MUFFLE-WARNING NIL :REPORT #1="Muffle warning" :TEST (LAMBDA (C) (EQ C CONDITION)))) (PROGN (SIGNAL CONDITION) (FORMAT *ERROR-OUTPUT* #0# CONDITION)) MUFFLE-WARNING #:TAG5258 NIL T (*ACTIVE-RESTARTS*) WARNING SIMPLE-WARNING CONDITION-ARGUMENT *ACTIVE-RESTARTS* *CONDITION-RESTARTS* PUSH-RESTARTS :NAME :FUNCTION :REPORT-FUNCTION :TEST-FUNCTION MAKE-RESTART LIST CONDITION-RESTARTS SIGNAL *ERROR-OUTPUT* FORMAT APPLY #1# "~a") 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DO-BREAK #K(#(77 2 1 1 10 10 0 1 2 3 4 5 6 7 8 9 12 52 12 1 13 14 11 0 11 34 11 15 54 2 16 17 0 57 13 38 11 18 69 10 9 49 11 18 0 38 12 20 38 13 21 38 14 22 51 5 23 0 51 4 24 2 17 15 23 15 20 6 20 8 21 24 22 23 23 16 20 1 20 23 17 0 2 11 20 23 18 20 2 7 6 69 5 9 49 19 20 0 38 20 22 23 21 0 2 22 4 38 22 22 38 23 23 23 24 22 5 3 22 1 23 2 23 25 0 1 22 53 14 35 15 18 51 6 19 0 23 26 0 2 19 18 53 14 77 2 3 0 0 0 36 2 3 0 55 1 3 80 2 1 27 0 25 21 0 2 1 2 80 1 2 6 8 0 13 0 2 2 1) #(0 25 35 129 144 157 168) #(SIMPLE-CONDITION #0="Break: " (*CONDITION-RESTARTS*) ((CONTINUE NIL :REPORT (LAMBDA (STREAM) (FORMAT STREAM #1="Return from BREAK.")) (VALUES NIL T))) (PROGN (FORMAT *DEBUG-IO* #0#) (DO-DEBUGGER (MAKE-CONDITION (QUOTE SIMPLE-CONDITION) :FORMAT-STRING FMT-STRING :FORMAT-ARGUMENTS FMT-ARGS))) CONTINUE T (*ACTIVE-RESTARTS*) NIL #:TAG5432 #("**BREAK**") *ACTIVE-RESTARTS* :NAME :FUNCTION :REPORT-FUNCTION MAKE-RESTART LIST PUSH-RESTARTS CONDITION-RESTARTS *CONDITION-RESTARTS* *DEBUG-IO* FORMAT :FORMAT-STRING :FORMAT-ARGUMENTS MAKE-CONDITION DO-DEBUGGER APPLY #1#) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DO-DEBUGGER #K(#(80 2 33 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 8 31 33 69 34 33 49 32 32 0 38 33 36 21 0 1 4 36 38 33 37 69 2 33 1 3 70 1 4 49 33 32 0 31 37 0 2 1 37 1 2 38 34 36 2 43 36 31 36 69 30 33 49 34 36 0 38 34 38 38 35 39 21 0 5 6 39 38 35 39 1 7 38 36 39 69 29 33 49 36 39 0 38 37 41 21 0 8 9 41 38 37 41 1 10 38 38 41 69 28 33 49 38 41 0 21 0 11 21 1 52 4 13 43 44 59 2 43 44 21 0 12 21 44 38 39 43 23 40 0 3 43 16 1 1 21 34 32 45 54 14 46 47 0 57 43 38 41 48 69 12 33 1 16 70 1 20 49 41 48 0 51 59 50 2 47 45 23 42 50 2 11 50 23 42 50 1 50 38 41 51 23 43 0 2 50 51 72 19 50 10 58 50 21 0 17 18 50 16 50 50 14 50 1 15 23 9 0 1 8 1 15 39 42 0 38 39 51 23 40 0 3 51 3 1 53 44 35 45 48 12 2 32 48 53 44 23 44 0 0 38 45 43 21 0 22 26 43 38 46 44 21 0 23 24 44 38 46 44 1 25 0 5 44 23 47 0 1 44 23 48 43 1 1 69 27 33 49 49 43 0 52 26 28 45 46 1 27 34 32 47 54 29 48 49 0 57 45 38 50 50 69 25 33 49 50 50 0 38 51 52 38 52 53 38 53 54 51 63 55 1 38 51 62 56 2 49 47 23 54 52 6 52 24 53 56 54 55 23 42 52 1 52 23 55 0 2 32 52 23 56 52 2 23 22 69 21 33 49 57 52 0 38 58 54 21 0 30 31 54 38 39 55 23 40 0 2 55 6 23 59 0 0 38 39 54 23 40 0 3 54 20 38 38 39 54 23 40 0 2 54 19 38 49 54 23 60 54 1 54 0 18 55 37 60 32 51 55 54 52 13 43 56 57 59 2 56 57 21 0 33 42 57 52 7 34 58 59 1 42 34 32 60 54 35 61 62 0 57 58 38 41 63 69 12 33 1 37 70 1 41 49 41 63 0 51 60 65 2 62 60 23 42 65 2 11 65 23 42 65 1 65 38 41 66 23 43 0 2 65 66 72 40 65 10 58 65 21 0 38 39 65 16 65 65 14 65 1 36 23 9 0 1 8 1 36 39 42 0 38 39 66 38 49 67 48 55 67 67 23 40 0 3 66 16 67 53 59 35 60 63 12 2 32 63 53 59 61 112 55 55 37 60 32 51 55 54 34 32 58 54 44 59 60 0 57 56 38 41 61 69 12 33 1 46 70 1 50 49 41 61 0 51 61 63 2 60 58 23 42 63 2 11 63 23 42 63 1 63 38 41 64 23 43 0 2 63 64 72 49 63 10 58 63 21 0 47 48 63 16 63 63 14 63 1 45 23 9 0 1 8 1 45 39 42 0 38 39 64 38 49 65 48 55 65 65 23 40 0 4 64 9 55 65 53 57 35 58 61 12 2 32 61 53 57 38 61 56 23 62 57 1 17 50 0 52 53 56 57 38 39 58 38 34 59 23 40 0 3 58 14 59 1 54 38 39 58 38 61 59 23 63 59 1 59 38 34 60 23 40 0 4 58 15 59 60 38 39 56 38 64 57 23 65 56 3 56 32 57 38 64 57 50 0 55 56 56 57 23 66 0 1 18 38 67 57 49 68 57 0 38 69 57 49 67 57 0 38 70 57 49 69 57 0 49 70 56 0 39 42 56 38 70 57 38 71 58 23 72 0 4 57 32 32 58 30 56 56 38 73 57 49 74 57 0 38 75 57 49 73 57 0 16 56 57 49 75 57 0 38 39 57 23 76 0 1 57 16 56 57 21 1 57 51 56 38 39 58 23 40 0 3 58 16 57 17 56 56 16 56 57 21 1 57 51 56 35 47 50 51 64 51 0 23 77 0 2 51 50 53 46 80 4 0 0 36 2 3 0 55 1 20 80 4 0 0 36 2 3 0 55 1 41 80 4 0 0 36 2 3 0 55 1 50 77 2 3 0 0 0 36 2 3 0 55 1 58 80 3 1 78 0 25 40 0 3 2 3 1 80 1 2 8 30 0 13 0 2 2 1) #(0 52 60 63 75 101 106 109 124 129 132 144 158 170 180 188 191 232 239 246 261 270 282 290 295 298 303 315 322 332 404 417 453 467 474 484 492 495 536 543 550 572 581 591 601 609 612 653 660 667 690 699 713 728 750 772 777 859 880 895 906 917 928 941 953) #((*DEBUGGER-HOOK*) "~a~%" #:BLOCK6194 -1 #0="uncaught error~%" #:BLOCK6020 "stack overflow" #1="~2d: ~a~%" T ERROR (*ACTIVE-HANDLERS*) #:BLOCK5922 #2="~&~d> " #3="~&~A ~d> " #4="~s~%" #5="USER" 0 #6="To continue, type (continue n), where n is an option number:~%" #7="Break level ~d.~%" (*CONDITION-RESTARTS*) ((ABORT NIL :REPORT (LAMBDA (STREAM) (FORMAT STREAM #8="Return to break level ~d." CURRENT-LEVEL)) (VALUES NIL T))) (PROGN (WHEN *BATCH-MODE* (FORMAT *DEBUG-IO* #0#) (EXIT)) (FORMAT *DEBUG-IO* #7# CURRENT-LEVEL) (FORMAT *DEBUG-IO* #6#) (DOTIMES (I (LENGTH *CONTINUE-RESTARTS*)) (MULTIPLE-VALUE-BIND (VAL ERR) (IGNORE-ERRORS (FORMAT *DEBUG-IO* #1# I (NTH I *CONTINUE-RESTARTS*))) (DECLARE (IGNORE VAL)) (WHEN ERR (IGNORE-ERRORS (FORMAT *DEBUG-IO* "~s~%" (NTH I *CONTINUE-RESTARTS*)))))) (LOOP (IF (EQ *PACKAGE* (FIND-PACKAGE #5#)) (FORMAT *DEBUG-IO* #2# *DEBUG-LEVEL*) (FORMAT *DEBUG-IO* #3# (PACKAGE-NAME *PACKAGE*) *DEBUG-LEVEL*)) (LET ((EXPR (READ *DEBUG-IO* NIL *EOF-MARK*))) (IF (EQ EXPR *EOF-MARK*) (CONTINUE 0)) (SETF +++ ++ ++ + + - - EXPR)) (LET ((VALS (MULTIPLE-VALUE-LIST (EVALHOOK - NIL NIL *DEBUG-ENV*)))) (SETF *** ** ** * * (FIRST VALS)) (FRESH-LINE *DEBUG-IO*) (DOLIST (V VALS) (FORMAT *DEBUG-IO* #4# V))))) ABORT (*ACTIVE-RESTARTS*) #:TAG5663 (*CONTINUE-RESTARTS*) (*PRINT-LENGTH*) (*PRINT-LEVEL*) (*DEBUG-LEVEL*) 1 NIL (*PRINT-READABLY*) *PRINT-READABLY* *DEBUGGER-HOOK* *DEBUG-LEVEL* *DEBUG-PRINT-LEVEL* *PRINT-LEVEL* *DEBUG-PRINT-LENGTH* *PRINT-LENGTH* *DEBUG-IO* FORMAT *ACTIVE-HANDLERS* LIST PUSH-CONDITION-HANDLERS RESET-SYSTEM *TRACENABLE* *TRACELIMIT* BAKTRACE COMPUTE-RESTARTS *CONTINUE-RESTARTS* *ACTIVE-RESTARTS* :NAME :FUNCTION :REPORT-FUNCTION MAKE-RESTART PUSH-RESTARTS CONDITION-RESTARTS *CONDITION-RESTARTS* *BATCH-MODE* EXIT LENGTH *PACKAGE* FIND-PACKAGE PACKAGE-NAME *EOF-MARK* READ CONTINUE ++ +++ + - *DEBUG-ENV* EVALHOOK ** *** * FRESH-LINE APPLY #8#) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DEBUG-FUN #K(#(80 1 2 0 1 2 38 2 3 21 0 1 3 3 38 2 4 23 3 4 1 4 21 0 2 3 4 38 2 4 2 43 4 1 4 25 3 0 1 4 11 0 2) #(0 14 27 40) #(1 NIL *DEBUG-FRAME* STACK-VALUE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CLEAN-UP #K(#(77 1 1 1 0 0 0 25 1 0 1 1) #(0) #(#(NIL) CONTINUE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(BAKTRACE #K(#(77 1 1 2 7 7 0 1 2 3 4 5 6 11 21 2 1 2 2 0 2 10 1 3 38 8 10 38 9 11 21 0 4 15 11 38 9 12 21 0 5 6 1 0 1 13 1 7 0 3 13 0 12 14 0 13 15 0 15 16 37 61 15 8 16 6 23 10 17 1 14 21 0 9 15 17 2 43 14 8 16 38 11 17 23 10 18 1 16 23 12 0 3 17 7 18 2 43 16 8 16 21 0 10 13 10 23 10 17 1 16 2 43 16 8 16 37 62 11 13 17 6 38 11 18 23 12 0 2 18 5 0 6 18 37 60 12 13 18 17 38 11 19 2 43 16 18 20 23 10 20 1 20 23 12 0 3 19 4 20 61 112 18 18 37 60 12 13 18 17 23 10 16 1 14 2 45 14 16 16 2 45 15 8 17 0 16 14 0 17 15 0 15 16 37 61 15 14 16 6 23 10 17 1 14 21 0 9 15 17 13 0 0) #(0 19 24 27 35 43 48 51 66 76 106 122 140 170 200 210) #(-1 "  ~s~%" "Arguments:~%" 0 "Function: ~s~%" 1 NIL #(NIL %NOT-SUPPLIED) *BAKTRACE-PRINT-ARGUMENTS* *DEBUG-FRAME* STACK-VALUE *ERROR-OUTPUT* FORMAT) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(SHOW-BINDINGS #K(#(77 1 1 1 3 3 0 1 2 10 38 4 5 16 5 5 16 5 6 21 1 1 20 5 0 6 7 21 1 2 19 7 0 6 8 16 8 9 21 1 3 19 8 0 9 10 21 1 4 18 10 16 9 11 17 9 12 23 5 13 1 11 21 0 5 15 13 21 0 6 7 1 0 4 14 1 8 0 2 14 21 0 9 10 14 0 14 13 1 16 40 11 1 14 21 0 11 12 14 0 14 13 1 16 21 1 13 14 1 23 6 13 2 11 1 1 16 0 4 13 1 16 0 4 13 21 0 17 18 13 38 7 13 23 8 0 4 13 3 11 12 17 8 8 16 8 9 21 1 3 19 8 17 5 5 16 5 6 21 1 1 20 5 13 0 0) #(0 24 32 43 51 67 72 77 80 85 90 99 104 109 117 122 125 130 141 152 163) #(T "~s~15t~s~%" NIL #(NIL) *DEBUG-ENV* SYMBOLP MEMBER *ERROR-OUTPUT* FORMAT) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 80 2 3 3 4 5 5 23 6 5 1 4 23 6 6 1 1 23 6 7 1 3 23 6 8 1 3 23 6 9 1 2 25 7 0 5 5 6 7 8 9 80 3 0 2 17 1 3 51 1 4 0 25 8 0 2 4 3) #(0 20 61) #(GET-VALUE COERCE-TO-MACRO INSTALL-FUNCTION *DEBUG-ENV* NIL EVALHOOK LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 80 3 3 3 4 5 4 23 6 6 1 5 23 6 7 1 4 23 6 8 1 1 23 6 9 1 2 23 7 7 3 7 8 9 23 6 7 1 7 23 6 8 1 3 25 7 0 3 6 7 8 80 3 0 2 17 1 3 51 1 4 0 25 8 0 2 4 3) #(0 20 71) #(SET-VALUE COERCE-TO-MACRO INSTALL-FUNCTION *DEBUG-ENV* SETF EVALHOOK LIST APPEND APPLY) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PROMPT-FOR #K(#(77 2 3 0 1 0 2 39 1 5 38 2 6 23 3 0 4 5 6 2 3 38 2 5 23 4 5 1 5 23 5 5 1 5 23 6 6 2 5 1 21 0 2 3 6 11 0 5 38 2 6 23 1 0 4 6 4 5 1 1 1) #(0 7 45 48) #("~s is not of type ~s.~%" FORMAT *DEBUG-IO* APPLY READ EVAL TYPEP) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(TYPE-CHECK #K(#(80 3 2 0 1 1 23 2 5 2 1 2 21 0 2 1 5 23 3 0 3 3 1 2 11 0 4) #(0 17 24) #("~s is not of type ~s." NIL TYPEP ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 1 3 1 27 24 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 22 23 28 28 1 27 23 6 29 1 26 23 6 30 1 25 23 6 31 1 28 23 6 32 1 1 23 29 31 2 31 32 23 6 31 1 31 23 29 31 1 31 23 6 31 1 31 23 6 32 1 24 23 6 33 1 23 23 6 34 1 28 23 6 35 1 22 23 6 36 1 2 23 29 35 2 35 36 23 6 35 1 35 23 29 33 3 33 34 35 23 6 33 1 33 23 6 34 1 21 23 6 35 1 28 23 29 34 2 34 35 23 6 34 1 34 23 6 35 1 20 23 6 36 1 19 23 6 37 1 22 23 6 38 1 18 23 29 37 2 37 38 23 6 37 1 37 23 6 38 1 17 23 6 39 1 28 23 6 40 1 16 23 6 41 1 22 23 6 42 1 2 23 29 41 2 41 42 23 6 41 1 41 23 6 42 1 15 23 6 43 1 22 23 6 44 1 1 23 29 43 2 43 44 23 6 43 1 43 23 6 44 1 14 23 6 45 1 3 23 29 36 10 36 37 38 39 40 41 42 43 44 45 23 6 36 1 36 23 6 37 1 13 23 6 38 1 28 23 29 38 1 38 23 6 38 1 38 23 6 39 1 12 23 6 40 1 11 23 6 41 1 10 23 6 42 1 9 23 6 43 1 8 23 6 44 1 7 23 6 45 1 6 23 6 46 1 22 23 6 47 1 2 23 29 46 2 46 47 23 6 46 1 46 23 6 47 1 5 23 6 48 1 22 23 6 49 1 1 23 29 48 2 48 49 23 6 48 1 48 23 29 45 4 45 46 47 48 23 6 45 1 45 23 29 44 2 44 45 23 6 44 1 44 23 29 42 3 42 43 44 23 6 42 1 42 23 6 43 1 4 23 6 44 1 1 23 6 45 1 28 23 29 43 3 43 44 45 23 6 43 1 43 23 29 37 7 37 38 39 40 41 42 43 23 6 37 1 37 23 29 35 3 35 36 37 23 6 35 1 35 23 29 32 4 32 33 34 35 23 6 32 1 32 23 29 30 3 30 31 32 23 6 30 1 30 25 29 0 2 29 30 80 3 0 2 17 1 3 51 1 4 0 25 30 0 2 4 3) #(0 20 512) #(BASE-CHECK-TYPE COERCE-TO-MACRO INSTALL-FUNCTION SETF "Value for ~s: " PROMPT-FOR LIST NIL LAMBDA :INTERACTIVE "Store new value." :REPORT STORE-VALUE :TYPE-STRING :FORM :EXPECTED-TYPE :DATUM CHECK-TYPE-ERROR ERROR RESTART-CASE RETURN QUOTE TYPEP IF LET LOOP "VAL" #(NIL) GENSYM APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 1 3 1 6 3 3 4 5 5 23 7 7 1 6 23 7 8 1 5 23 7 9 1 1 23 7 10 1 2 23 7 11 1 3 23 8 8 4 8 9 10 11 23 7 8 1 8 23 7 9 1 4 25 8 0 3 7 8 9 80 3 0 2 17 1 3 51 1 4 0 25 9 0 2 4 3) #(0 20 80) #(CHECK-TYPE COERCE-TO-MACRO INSTALL-FUNCTION NIL BASE-CHECK-TYPE PROGN #(NIL) LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 4 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 2 7 4 3 4 5 6 6 21 0 2 3 3 23 8 9 1 8 23 8 10 1 1 23 8 11 1 7 23 8 12 1 3 23 9 11 3 11 12 4 23 8 11 1 11 25 9 0 3 9 10 11 23 8 9 1 8 23 8 10 1 1 23 8 11 1 7 23 8 12 1 6 23 8 13 1 5 23 8 14 1 1 23 9 13 2 13 14 23 8 13 1 13 23 9 11 3 11 12 13 23 8 11 1 11 25 9 0 3 9 10 11 80 3 0 2 17 1 3 51 1 4 0 25 10 0 2 4 3) #(0 20 36 75 135) #(ASSERT COERCE-TO-MACRO INSTALL-FUNCTION QUOTE "The assertion ~S failed" ERROR UNLESS #(NIL NIL) LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 10 3 4 5 6 7 8 9 10 11 12 14 23 13 13 1 12 23 14 14 1 11 23 14 15 1 13 23 14 16 1 1 23 15 15 2 15 16 23 14 15 1 15 23 15 15 1 15 23 14 15 1 15 23 14 16 1 10 23 14 17 1 13 23 14 18 1 9 23 14 19 1 8 23 14 20 1 7 23 14 21 1 6 23 15 20 2 20 21 23 14 20 1 20 23 14 21 1 5 23 14 22 1 13 23 14 23 1 4 23 14 24 1 7 23 14 25 1 3 39 16 26 23 17 26 2 26 2 23 15 25 2 25 26 23 14 25 1 25 23 15 24 2 24 25 23 14 24 1 24 23 15 19 6 19 20 21 22 23 24 23 14 19 1 19 23 15 18 2 18 19 23 14 18 1 18 23 15 16 4 16 17 2 18 23 14 16 1 16 25 15 0 3 14 15 16 80 3 0 2 17 1 3 51 1 4 0 25 18 0 2 4 3) #(0 20 220) #(ETYPECASE COERCE-TO-MACRO INSTALL-FUNCTION OR :EXPECTED-TYPE :DATUM TYPE-ERROR QUOTE ERROR T TYPECASE LET "VAR" GENSYM LIST APPEND FIRST MAPCAR APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 3 3 4 5 5 23 6 6 1 5 23 6 7 1 4 23 6 8 1 1 23 6 9 1 3 39 7 10 23 8 10 2 10 2 23 9 9 2 9 10 23 6 9 1 9 23 9 7 3 7 8 9 23 6 7 1 7 25 9 0 3 6 7 2 80 3 0 2 17 1 3 51 1 4 0 25 10 0 2 4 3) #(0 20 88) #(CTYPECASE COERCE-TO-MACRO INSTALL-FUNCTION OR BASE-CHECK-TYPE TYPECASE LIST FIRST MAPCAR APPEND APPLY) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(COMPUTE-CASE-MATCH-TYPE #K(#(80 2 2 0 1 6 0 3 4 0 1 5 16 5 6 21 1 1 5 5 16 6 7 21 1 2 4 7 16 6 8 16 8 9 21 1 3 4 8 20 9 4 4 17 8 8 16 8 9 21 1 3 4 8 16 6 7 20 7 4 4 17 5 5 16 5 6 21 1 1 5 5 23 2 7 1 4 20 2 7 0 57 0) #(0 20 28 39 54 72) #(MEMBER NIL NREVERSE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 10 3 4 5 6 7 8 9 10 11 12 14 23 13 13 1 12 23 14 14 1 11 23 14 15 1 13 23 14 16 1 1 23 15 15 2 15 16 23 14 15 1 15 23 15 15 1 15 23 14 15 1 15 23 14 16 1 10 23 14 17 1 13 23 14 18 1 9 23 14 19 1 8 23 14 20 1 7 23 14 21 1 6 23 15 20 2 20 21 23 14 20 1 20 23 14 21 1 5 23 14 22 1 13 23 14 23 1 4 23 14 24 1 3 23 14 25 1 7 23 14 26 1 2 23 15 25 2 25 26 23 14 25 1 25 23 15 24 2 24 25 23 14 24 1 24 23 15 19 6 19 20 21 22 23 24 23 14 19 1 19 23 15 18 2 18 19 23 14 18 1 18 23 15 16 4 16 17 2 18 23 14 16 1 16 25 15 0 3 14 15 16 80 3 0 2 17 1 3 51 1 4 0 25 16 0 2 4 3) #(0 20 216) #(ECASE COERCE-TO-MACRO INSTALL-FUNCTION COMPUTE-CASE-MATCH-TYPE :EXPECTED-TYPE :DATUM TYPE-ERROR QUOTE ERROR T CASE LET "VAR" GENSYM LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 2 3 4 4 23 5 5 1 4 23 5 6 1 3 23 5 7 1 1 23 6 8 1 2 23 5 8 1 8 23 7 6 3 6 7 8 23 5 6 1 6 25 7 0 3 5 6 2 80 3 0 2 17 1 3 51 1 4 0 25 8 0 2 4 3) #(0 20 72) #(CCASE COERCE-TO-MACRO INSTALL-FUNCTION BASE-CHECK-TYPE CASE LIST COMPUTE-CASE-MATCH-TYPE APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 5 2 0 23 1 2 1 2 25 2 0 2 1 2 80 2 1 3 0 25 4 0 1 2 77 2 2 0 13 0 5 6 7 8 9 10 11 12 13 14 15 16 16 23 17 16 1 2 71 2 3 16 16 38 18 17 50 0 3 4 16 17 23 4 16 1 8 23 4 17 1 7 23 17 18 1 2 16 18 18 23 19 19 1 2 23 20 20 1 13 23 20 21 1 16 23 20 22 1 6 23 20 23 1 5 23 20 24 1 4 17 18 25 23 21 24 2 24 25 23 20 24 1 24 23 21 23 2 23 24 23 20 23 1 23 23 20 24 1 13 23 20 25 1 17 23 20 26 1 9 23 20 27 1 16 23 20 28 1 3 23 20 29 1 9 23 20 30 1 17 23 20 31 1 1 23 21 29 3 29 30 31 23 20 29 1 29 23 21 28 3 28 29 19 23 20 28 1 28 23 21 26 3 26 27 28 23 20 26 1 26 23 21 24 3 24 25 26 23 20 24 1 24 23 21 22 3 22 23 24 23 20 22 1 22 25 21 0 3 20 21 22 23 4 16 1 15 23 4 17 1 14 51 1 18 0 23 22 18 2 18 2 23 20 19 1 13 23 20 20 1 16 23 20 21 1 12 23 20 22 1 17 23 21 22 1 22 23 20 22 1 22 23 20 23 1 11 23 20 24 1 10 23 23 25 3 2 17 18 23 20 25 1 25 23 20 26 1 9 23 20 27 1 16 23 20 28 1 1 23 21 26 3 26 27 28 23 20 26 1 26 23 21 24 3 24 25 26 23 20 24 1 24 23 24 25 4 2 16 17 18 23 21 23 3 23 24 25 23 20 23 1 23 23 21 21 3 21 22 23 23 20 21 1 21 25 21 0 3 19 20 21 80 3 0 2 17 1 3 51 2 4 0 25 25 0 2 4 3) #(0 20 30 68 248 398) #(HANDLER-CASE COERCE-TO-MACRO INSTALL-FUNCTION "TAG" GENSYM LAMBDA FUNCTION MULTIPLE-VALUE-CALL "NORMAL" "ERROR" RETURN-FROM HANDLER-BIND TAGBODY LET BLOCK "VAR" "BLOCK" LAST :NO-ERROR BUTLAST LIST APPEND MAPCAR HANDLER-CASE-HANDLER-BIND-FORMS EXPAND-HANDLER-CASE-BODIES APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 1 0 6 3 4 5 6 7 8 7 23 9 8 1 7 23 9 9 1 6 23 10 9 2 9 1 23 9 9 1 9 23 9 10 1 5 23 9 11 1 4 23 10 11 1 11 23 9 11 1 11 23 9 12 1 3 23 9 13 1 2 23 9 14 1 4 23 10 12 3 12 13 14 23 9 12 1 12 23 10 10 3 10 11 12 23 9 10 1 10 25 10 0 3 8 9 10 80 3 0 2 17 1 3 51 1 4 0 25 11 0 2 4 3) #(0 20 119) #(IGNORE-ERRORS COERCE-TO-MACRO INSTALL-FUNCTION NIL VALUES C ERROR PROGN HANDLER-CASE LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 14 3 4 5 6 7 8 9 10 11 12 13 14 15 16 11 23 17 17 1 16 23 12 18 1 15 23 12 19 1 14 23 12 20 1 14 23 18 19 2 19 20 23 12 19 1 19 23 18 19 1 19 23 12 19 1 19 23 12 20 1 13 23 12 21 1 12 23 19 22 1 1 23 18 21 2 21 22 23 12 21 1 21 23 12 22 1 14 23 18 20 3 20 21 22 23 12 20 1 20 23 12 21 1 15 23 12 22 1 17 23 12 23 1 11 23 12 24 1 10 23 12 25 1 9 23 18 25 2 25 2 23 12 25 1 25 23 18 24 2 24 25 23 12 24 1 24 23 12 25 1 8 23 18 23 3 23 24 25 23 12 23 1 23 23 18 22 2 22 23 23 12 22 1 22 23 18 22 1 22 23 12 22 1 22 23 12 23 1 7 23 12 24 1 17 23 12 25 1 6 23 12 26 1 5 23 12 27 1 17 23 18 26 2 26 27 23 12 26 1 26 23 18 25 2 25 26 23 12 25 1 25 23 12 26 1 4 23 12 27 1 3 23 18 26 2 26 27 23 12 26 1 26 23 18 23 4 23 24 25 26 23 12 23 1 23 23 18 21 3 21 22 23 23 12 21 1 21 25 18 0 4 18 19 20 21 80 3 0 2 17 1 3 51 1 4 0 25 20 0 2 4 3) #(0 20 310) #(HANDLER-BIND COERCE-TO-MACRO INSTALL-FUNCTION "stack overflow" ERROR FIRST VALUES-LIST IF NIL PROGN MULTIPLE-VALUE-LIST ERRSET LIST PUSH-CONDITION-HANDLERS *ACTIVE-HANDLERS* LET "VALUE" GENSYM APPEND REVERSE-EXPAND-HANDLER-BIND-FORMS APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 13 3 4 5 6 7 8 9 10 11 12 13 14 15 11 23 16 16 1 15 23 11 17 1 14 23 11 18 1 13 23 11 19 1 13 23 17 18 2 18 19 23 11 18 1 18 23 17 18 1 18 23 11 18 1 18 23 11 19 1 12 23 11 20 1 11 23 18 21 1 1 23 17 20 2 20 21 23 11 20 1 20 23 11 21 1 13 23 17 19 3 19 20 21 23 11 19 1 19 23 11 20 1 14 23 11 21 1 16 23 11 22 1 10 23 11 23 1 9 23 11 24 1 8 23 17 24 2 24 2 23 11 24 1 24 23 17 23 2 23 24 23 11 23 1 23 23 17 22 2 22 23 23 11 22 1 22 23 17 21 2 21 22 23 11 21 1 21 23 17 21 1 21 23 11 21 1 21 23 11 22 1 7 23 11 23 1 16 23 11 24 1 6 23 11 25 1 5 23 11 26 1 16 23 17 25 2 25 26 23 11 25 1 25 23 17 24 2 24 25 23 11 24 1 24 23 11 25 1 4 23 11 26 1 3 23 17 25 2 25 26 23 11 25 1 25 23 17 22 4 22 23 24 25 23 11 22 1 22 23 17 20 3 20 21 22 23 11 20 1 20 25 17 0 4 17 18 19 20 80 3 0 2 17 1 3 51 1 4 0 25 19 0 2 4 3) #(0 20 303) #(HANDLER-BIND COERCE-TO-MACRO INSTALL-FUNCTION "stack overflow" ERROR FIRST VALUES-LIST IF PROGN MULTIPLE-VALUE-LIST ERRSET LIST PUSH-CONDITION-HANDLERS *ACTIVE-HANDLERS* LET "VALUE" GENSYM APPEND REVERSE-EXPAND-HANDLER-BIND-FORMS APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 6 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 3 1 10 7 3 4 5 6 7 8 9 7 23 11 12 1 2 37 60 2 3 6 12 23 12 0 1 5 21 0 5 4 2 23 12 0 1 8 23 7 12 1 11 23 7 13 1 10 23 7 14 1 1 23 13 13 2 13 14 23 7 13 1 13 23 7 14 1 10 16 2 15 23 7 15 1 15 23 13 14 2 14 15 23 7 14 1 14 38 14 15 23 15 15 2 15 4 71 2 2 15 15 23 16 15 1 15 23 7 15 1 15 23 7 16 1 10 38 17 17 23 15 17 2 17 4 71 2 2 17 17 23 7 17 1 17 23 13 16 2 16 17 23 7 16 1 16 23 7 17 1 9 39 18 18 23 19 18 2 18 3 23 13 17 2 17 18 23 7 17 1 17 25 13 0 6 12 13 14 15 16 17 80 3 0 2 17 1 3 51 1 4 0 25 20 0 2 4 3) #(0 20 45 50 55 60 204) #(DEFINE-CONDITION COERCE-TO-MACRO INSTALL-FUNCTION "multiple inheritance not supported" 1 NIL "new conditions must inherit from an existing one" LIST QUOTE MAKE-CONDITION-CLASS #(NIL) LENGTH ERROR APPEND :REPORT ASSOC TRANSFORM-CONDITION-REPORT-OPTION :DOCUMENTATION TRANSFORM-CONDITION-SLOT-OPTIONS MAPCAR APPLY) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-CONDITION #K(#(77 2 2 0 3 0 1 2 3 38 3 6 23 4 6 3 1 5 6 38 3 7 50 0 1 2 6 7 23 5 0 2 3 1 46 1 5 6 39 6 7 23 7 8 1 6 23 8 8 1 8 23 9 7 3 7 1 8 23 10 0 3 7 6 2 11 0 7) #(0 28 34) #("bad condition type - ~s" NIL *STRUCT-SLOTS* *NOT-FOUND* GET ERROR %MAKE-STRUCT LENGTH MAKE-LIST APPLY INITIALIZE-CONDITION) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 9 3 4 5 6 7 8 9 10 11 13 16 1 12 71 2 2 1 13 71 2 0 1 14 23 12 15 1 11 23 12 16 1 10 23 13 16 2 16 2 23 12 16 1 16 23 12 17 1 12 23 12 18 1 9 23 12 19 1 8 23 12 20 1 7 23 12 21 1 6 23 13 21 1 21 23 12 21 1 21 23 12 22 1 5 23 12 23 1 6 23 12 24 1 13 23 13 22 4 22 23 24 14 23 12 22 1 22 23 13 20 3 20 21 22 23 12 20 1 20 23 12 21 1 4 23 12 22 1 9 23 12 23 1 3 23 13 21 3 21 22 23 23 12 21 1 21 23 13 17 5 17 18 19 20 21 23 12 17 1 17 25 13 0 3 15 16 17 80 3 0 2 17 1 3 51 1 4 0 25 14 0 2 4 3) #(0 20 192) #(WITH-SIMPLE-RESTART COERCE-TO-MACRO INSTALL-FUNCTION T VALUES FORMAT STREAM LAMBDA :REPORT NIL PROGN RESTART-CASE LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 12 3 4 5 6 7 8 9 10 11 12 13 14 16 23 15 15 1 14 23 15 16 1 13 23 15 0 1 12 23 16 17 3 15 16 2 23 17 18 1 11 23 17 19 1 15 23 17 20 1 10 23 17 21 1 16 23 17 22 1 9 23 18 21 2 21 22 23 17 21 1 21 23 18 21 1 21 23 17 21 1 21 23 17 22 1 8 23 17 23 1 7 16 17 24 23 17 24 1 24 23 17 25 1 10 23 17 26 1 6 23 17 27 1 5 23 17 28 1 4 23 17 29 1 1 23 18 28 2 28 29 23 17 28 1 28 23 17 29 1 4 23 17 30 1 2 23 18 29 2 29 30 23 17 29 1 29 23 18 27 3 27 28 29 23 17 27 1 27 23 18 26 2 26 27 23 17 26 1 26 23 18 26 1 26 23 17 26 1 26 23 17 27 1 3 23 17 28 1 15 23 17 29 1 1 23 18 27 3 27 28 29 23 17 27 1 27 23 18 25 3 25 26 27 23 17 25 1 25 23 18 23 3 23 24 25 23 17 23 1 23 17 17 24 23 18 22 3 22 23 24 23 17 22 1 22 23 18 20 3 20 21 22 23 17 20 1 20 25 18 0 3 18 19 20 80 3 0 2 17 1 3 51 1 4 0 25 19 0 2 4 3) #(0 20 299) #(RESTART-CASE COERCE-TO-MACRO INSTALL-FUNCTION RETURN-FROM QUOTE CONDITION-RESTARTS *CONDITION-RESTARTS* RESTART-BIND TAGBODY NIL LET BLOCK "VALS" "ARGS" "TAG" GENSYM MAKE-RESTART-CASE-PARTS LIST APPEND APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 2 0 5 3 4 5 6 7 6 23 3 8 1 7 23 3 9 1 6 23 3 10 1 6 23 8 9 2 9 10 23 3 9 1 9 23 8 9 1 9 23 3 9 1 9 23 3 10 1 5 23 3 11 1 4 23 3 12 1 3 39 9 13 23 10 13 2 13 1 23 8 12 2 12 13 23 3 12 1 12 23 8 10 3 10 11 12 23 3 10 1 10 25 8 0 4 8 9 10 2 80 3 0 2 17 1 3 51 1 4 0 25 11 0 2 4 3) #(0 20 122) #(RESTART-BIND COERCE-TO-MACRO INSTALL-FUNCTION LIST NIL PUSH-RESTARTS *ACTIVE-RESTARTS* LET APPEND EXPAND-RESTART-BINDING-FORM MAPCAR APPLY) 0 NIL)
#K(#(80 1 1 0 1 51 2 2 0 23 1 2 1 2 25 2 0 2 1 2 77 2 3 0 3 3 4 5 5 23 6 7 1 6 23 6 8 1 5 23 6 9 1 5 23 7 8 2 8 9 23 6 8 1 8 23 7 8 1 8 23 6 8 1 8 23 6 9 1 4 23 6 10 1 1 23 6 11 1 2 23 7 9 3 9 10 11 23 6 9 1 9 25 7 0 4 7 8 9 3 80 3 0 2 17 1 3 51 1 4 0 25 8 0 2 4 3) #(0 20 100) #(WITH-CONDITION-RESTARTS COERCE-TO-MACRO INSTALL-FUNCTION PUSH-RESTARTS *ACTIVE-RESTARTS* LET LIST APPEND APPLY) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(COMPUTE-RESTARTS #K(#(77 1 1 1 1 1 0 5 0 2 3 38 2 4 16 4 5 21 1 1 4 4 23 3 6 2 5 1 21 0 2 3 6 71 2 2 5 7 20 7 3 3 17 4 4 16 4 5 21 1 1 4 4 23 4 6 1 3 25 5 0 1 6) #(0 22 33 42 53) #(NIL #(NIL) *ACTIVE-RESTARTS* RESTART-ENTRY-APPLICABLE-P DELETE-DUPLICATES NREVERSE) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(RESTART-ENTRY-APPLICABLE-P #K(#(80 3 3 0 1 2 3 16 1 6 71 2 2 1 7 21 0 1 2 6 40 6 2 0 57 0 21 0 3 4 2 0 3 8 1 5 0 4 8 21 0 6 7 8 11 0 8 23 3 6 2 7 5 33 6 0 1 2) #(0 20 26 31 36 39 44 47) #(NIL T 3 %STRUCT-REF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FIND-RESTART #K(#(77 1 2 1 2 2 0 1 3 21 0 1 6 1 23 3 5 1 1 21 0 2 3 5 38 4 5 51 7 6 2 1 2 23 5 5 2 6 5 71 2 2 5 0 57 0 23 6 5 2 3 1 21 0 4 5 5 38 4 5 38 7 6 39 8 7 23 9 5 4 1 5 6 7 71 2 2 5 0 57 0 11 0 4 11 0 4 80 4 2 10 1 1 23 11 6 2 3 2 21 0 8 9 6 71 2 2 3 6 23 12 6 2 6 4 40 1 6 0 57 0 11 0 5) #(0 14 24 46 57 81 84 87 104 121) #(RESTART NIL #(NIL) SYMBOLP *ACTIVE-RESTARTS* FIND-IF %STRUCT-TYPE-P :KEY SECOND FIND 1 RESTART-ENTRY-APPLICABLE-P %STRUCT-REF) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INVOKE-RESTART #K(#(77 2 2 0 2 0 1 1 23 2 5 1 1 21 0 1 2 5 23 3 5 2 5 3 25 4 0 2 5 2 25 5 0 2 4 1) #(0 18 30) #(2 "invalid restart - ~s" FIND-RESTART %STRUCT-REF APPLY ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(INVOKE-RESTART-INTERACTIVELY #K(#(80 2 3 0 1 2 4 23 3 5 1 1 23 4 6 2 5 4 23 4 7 2 5 3 21 0 1 4 5 21 0 2 3 6 31 6 8 0 25 5 0 2 7 8 33 7 0 0 25 6 0 2 2 1) #(0 29 34 44 48) #("invalid restart - ~s" 2 4 FIND-RESTART %STRUCT-REF APPLY ERROR) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(ABORT #K(#(77 1 1 1 1 1 0 1 23 2 3 2 2 1 25 3 0 1 3) #(0) #(ABORT #(NIL) FIND-RESTART INVOKE-RESTART) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CONTINUE #K(#(77 1 1 1 2 2 0 1 1 23 3 4 1 1 21 0 1 4 4 38 4 4 48 1 4 4 21 0 2 3 4 25 5 0 1 4 11 0 2 23 6 4 2 3 1 21 0 5 6 4 25 7 0 1 4 11 0 2) #(0 19 31 36 39 50 55) #(NIL CONTINUE #(NIL) INTEGERP *CONTINUE-RESTARTS* INVOKE-RESTART-INTERACTIVELY FIND-RESTART INVOKE-RESTART) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MUFFLE-WARNING #K(#(77 1 1 1 1 1 0 1 23 2 3 2 2 1 25 3 0 1 3) #(0) #(MUFFLE-WARNING #(NIL) FIND-RESTART INVOKE-RESTART) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STORE-VALUE #K(#(77 1 2 1 2 2 0 1 1 23 3 5 2 4 2 21 0 1 2 5 25 4 0 2 5 1 11 0 3) #(0 20 26) #(NIL STORE-VALUE #(NIL) FIND-RESTART INVOKE-RESTART) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(USE-VALUE #K(#(77 1 2 1 2 2 0 1 1 23 3 5 2 4 2 21 0 1 2 5 25 4 0 2 5 1 11 0 3) #(0 20 26) #(NIL USE-VALUE #(NIL) FIND-RESTART INVOKE-RESTART) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PRINT-SIMPLE-CONDITION #K(#(80 3 1 0 3 38 1 4 21 0 1 2 4 25 2 0 3 1 2 3 39 3 4 23 4 5 1 1 23 5 6 1 1 25 6 0 4 4 2 5 6) #(0 13 20) #(NIL *PRINT-ESCAPE* PRINT-CONDITION FORMAT SIMPLE-CONDITION-FORMAT-STRING SIMPLE-CONDITION-FORMAT-ARGUMENTS APPLY) 0 NIL) BYTE-CODE-CLOSE INSTALL-FUNCTION) 0 NIL)
#K(#(80 1 7 0 1 2 3 4 5 6 2 39 7 8 20 7 6 9 20 5 9 9 23 8 9 2 9 4 25 9 0 5 3 2 8 1 9) #(0) #(NIL CONDITION SIMPLE-CONDITION (FORMAT-ARGUMENTS (:ACCESSOR SIMPLE-CONDITION-FORMAT-ARGUMENTS) (:INITARG :FORMAT-ARGUMENTS)) FORMAT-STRING ((:ACCESSOR SIMPLE-CONDITION-FORMAT-STRING) (:INITARG :FORMAT-STRING)) (:INITFORM "Simple condition.") PRINT-SIMPLE-CONDITION LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 4 0 0 1 2 1 23 3 5 0 25 4 0 5 4 3 2 1 5) #(0) #(NIL CONDITION SERIOUS-CONDITION LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 4 0 0 1 2 1 23 3 5 0 25 4 0 5 4 3 2 1 5) #(0) #(NIL SERIOUS-CONDITION ERROR LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 7 0 1 2 3 4 5 6 2 39 7 8 20 7 6 9 20 5 9 9 23 8 9 2 9 4 25 9 0 5 3 2 8 1 9) #(0) #(NIL ERROR SIMPLE-ERROR (FORMAT-ARGUMENTS (:INITARG :FORMAT-ARGUMENTS)) FORMAT-STRING ((:INITARG :FORMAT-STRING)) (:INITFORM "Simple error.") PRINT-SIMPLE-CONDITION LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 4 0 0 1 2 1 23 3 5 0 25 4 0 5 4 3 2 1 5) #(0) #(NIL CONDITION WARNING LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 7 0 1 2 3 4 5 6 2 39 7 8 20 7 6 9 20 5 9 9 23 8 9 2 9 4 25 9 0 5 3 2 8 1 9) #(0) #(NIL WARNING SIMPLE-WARNING (FORMAT-ARGUMENTS (:INITARG :FORMAT-ARGUMENTS)) FORMAT-STRING ((:INITARG :FORMAT-STRING)) (:INITFORM "Simple warning.") PRINT-SIMPLE-CONDITION LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 4 0 0 1 2 1 23 3 5 0 25 4 0 5 4 3 2 1 5) #(0) #(NIL CONDITION STORAGE-CONDITION LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 5 0 1 2 3 4 1 23 5 6 1 5 25 6 0 5 4 3 2 1 6) #(0) #(NIL "Cell error" ERROR CELL-ERROR (NAME (:ACCESSOR CELL-ERROR-NAME) (:INITARG :NAME)) LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 4 0 1 2 3 2 23 4 5 1 4 23 5 6 0 25 6 0 5 3 2 5 1 6) #(0) #(NIL CELL-ERROR UNBOUND-VARIABLE #K(#(80 3 1 0 1 23 1 4 1 1 25 2 0 3 2 3 4) #(0) #("The variable ~s is unbound." CELL-ERROR-NAME FORMAT) 0 NIL) BYTE-CODE-CLOSE LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 4 0 1 2 3 2 23 4 5 1 4 23 5 6 0 25 6 0 5 3 2 5 1 6) #(0) #(NIL CELL-ERROR UNDEFINED-FUNCTION #K(#(80 3 1 0 1 23 1 4 1 1 25 2 0 3 2 3 4) #(0) #("The function ~s is not defined." CELL-ERROR-NAME FORMAT) 0 NIL) BYTE-CODE-CLOSE LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 8 0 1 2 3 4 5 6 7 2 23 8 9 1 8 23 9 10 4 7 6 5 4 25 10 0 5 3 2 9 1 10) #(0) #(NIL ERROR TYPE-ERROR (EXPECTED-TYPE (:INITARG :EXPECTED-TYPE) (:ACCESSOR TYPE-ERROR-EXPECTED-TYPE)) (DATUM (:INITARG :DATUM) (:ACCESSOR TYPE-ERROR-DATUM)) (FORMAT-ARGUMENTS) (FORMAT-STRING) #K(#(80 3 1 0 2 23 1 4 1 1 23 2 5 1 1 25 3 0 4 2 3 4 5) #(0) #("~s is not of type ~s." TYPE-ERROR-DATUM TYPE-ERROR-EXPECTED-TYPE FORMAT) 0 NIL) BYTE-CODE-CLOSE LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 6 0 1 2 3 4 5 2 23 6 7 1 6 23 7 8 2 5 4 25 8 0 5 3 2 7 1 8) #(0) #(NIL TYPE-ERROR CHECK-TYPE-ERROR (TYPE-STRING (:INITARG :TYPE-STRING) (:ACCESSOR CHECK-TYPE-ERROR-TYPE-STRING)) (FORM (:INITARG :FORM) (:ACCESSOR CHECK-TYPE-ERROR-FORM)) #K(#(80 3 2 0 1 3 23 2 5 1 1 21 0 1 2 5 23 3 5 1 1 23 4 6 1 1 23 2 7 1 1 25 5 0 5 2 3 5 6 7 23 3 5 1 1 23 4 6 1 1 23 6 7 1 1 25 5 0 5 2 4 5 6 7) #(0 16 40) #("The value of ~s, ~s, is not ~a." "The value of ~s, ~s, is not of type ~s." CHECK-TYPE-ERROR-TYPE-STRING CHECK-TYPE-ERROR-FORM TYPE-ERROR-DATUM FORMAT TYPE-ERROR-EXPECTED-TYPE) 0 NIL) BYTE-CODE-CLOSE LIST MAKE-CONDITION-CLASS) 0 NIL)
#K(#(80 1 4 0 0 1 2 1 23 3 5 0 25 4 0 5 4 3 2 1 5) #(0) #(NIL TYPE-ERROR SIMPLE-TYPE-ERROR LIST MAKE-CONDITION-CLASS) 0 NIL)
